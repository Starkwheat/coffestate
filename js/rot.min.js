



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-081df2fa5428fbd2637d873171269f1d2b58683324349f82f5ad6a5206660355.css" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-2a393a5559408b89426a39185b51e2dd210c55c8c8d25a564c935c4cd3ea258d.css" media="all" rel="stylesheet" />
    
    
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/site-c4b4365da282e51c06e107368db8502a2ecf82e64094d29d791b797372212de2.css" media="all" rel="stylesheet" />
    

    <link as="script" href="https://assets-cdn.github.com/assets/frameworks-a99faa9adb5b4c35c3eefd4255860c62ef4f2e3e1a41ee81bdb79c44bc778d0b.js" rel="preload" />
    
    <link as="script" href="https://assets-cdn.github.com/assets/github-4b81b749fc206d713be4b1b572d9dd641826e5af81f13ec8a2b5f565eaa417c3.js" rel="preload" />

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=1020">
    
    
    <title>rot.js/rot.min.js at master · ondras/rot.js · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars2.githubusercontent.com/u/192172?v=3&amp;s=400" name="twitter:image:src" /><meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="ondras/rot.js" name="twitter:title" /><meta content="rot.js - ROguelike Toolkit" name="twitter:description" />
      <meta content="https://avatars2.githubusercontent.com/u/192172?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="ondras/rot.js" property="og:title" /><meta content="https://github.com/ondras/rot.js" property="og:url" /><meta content="rot.js - ROguelike Toolkit" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    
    <meta name="pjax-timeout" content="1000">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="33FECBA6:18C3:15A1F6D:573B0388" name="octolytics-dimension-request_id" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged Out">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="ZGNiMDU1ZjVlMWIzYTE5NDVkMGYzOTBlZTUxNmE5YWJjNzk3MTE5NmRhOTU5ZmE2MWY4MGM2YjBhZTk1OGQzM3x7InJlbW90ZV9hZGRyZXNzIjoiNTEuMjU0LjIwMy4xNjYiLCJyZXF1ZXN0X2lkIjoiMzNGRUNCQTY6MThDMzoxNUExRjZEOjU3M0IwMzg4IiwidGltZXN0YW1wIjoxNDYzNDg1MzIwfQ==">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta content="a3322eb0a7b715e64ca35f167cd61e988e7dc36d" name="form-nonce" />

    <meta http-equiv="x-pjax-version" content="86cd207c2626edfb4e988581140e31b1">
    

      
  <meta name="description" content="rot.js - ROguelike Toolkit">
  <meta name="go-import" content="github.com/ondras/rot.js git https://github.com/ondras/rot.js.git">

  <meta content="192172" name="octolytics-dimension-user_id" /><meta content="ondras" name="octolytics-dimension-user_login" /><meta content="4391145" name="octolytics-dimension-repository_id" /><meta content="ondras/rot.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="4391145" name="octolytics-dimension-repository_network_root_id" /><meta content="ondras/rot.js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/ondras/rot.js/commits/master.atom" rel="alternate" title="Recent Commits to rot.js:master" type="application/atom+xml">


      <link rel="canonical" href="https://github.com/ondras/rot.js/blob/master/rot.min.js" data-pjax-transient>
  </head>


  <body class="logged-out   env-production  vis-public page-blob">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



          <header class="site-header js-details-container" role="banner">
  <div class="container-responsive">
    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z"></path></svg>
    </a>

    <button class="btn-link right site-header-toggle js-details-target" type="button" aria-label="Toggle navigation">
      <svg aria-hidden="true" class="octicon octicon-three-bars" height="24" version="1.1" viewBox="0 0 12 16" width="18"><path d="M11.41 9H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1z m0-4H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1zM0.59 11h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1z"></path></svg>
    </button>

    <div class="site-header-menu">
      <nav class="site-header-nav site-header-nav-main">
        <a href="/personal" class="js-selected-navigation-item nav-item nav-item-personal" data-ga-click="Header, click, Nav menu - item:personal" data-selected-links="/personal /personal">
          Personal
</a>        <a href="/open-source" class="js-selected-navigation-item nav-item nav-item-opensource" data-ga-click="Header, click, Nav menu - item:opensource" data-selected-links="/open-source /open-source">
          Open source
</a>        <a href="/business" class="js-selected-navigation-item nav-item nav-item-business" data-ga-click="Header, click, Nav menu - item:business" data-selected-links="/business /business/features /business/customers /business">
          Business
</a>        <a href="/explore" class="js-selected-navigation-item nav-item nav-item-explore" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship /explore">
          Explore
</a>      </nav>

      <div class="site-header-actions">
            <a class="btn btn-primary site-header-actions-btn" href="/join?source=header-repo" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
          <a class="btn site-header-actions-btn mr-2" href="/login?return_to=%2Fondras%2Frot.js%2Fblob%2Fmaster%2Frot.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
      </div>

        <nav class="site-header-nav site-header-nav-secondary">
          <a class="nav-item" href="/pricing">Pricing</a>
          <a class="nav-item" href="/blog">Blog</a>
          <a class="nav-item" href="https://help.github.com">Support</a>
          <a class="nav-item header-search-link" href="https://github.com/search">Search GitHub</a>
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/ondras/rot.js/search" class="js-site-search-form" data-scoped-search-url="/ondras/rot.js/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        tabindex="1"
        autocapitalize="off">
    </label>
</form></div>

        </nav>
    </div>
  </div>
</header>



    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main" class="main-content">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      
<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
      <a href="/login?return_to=%2Fondras%2Frot.js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6c4.94 0 7.94-6 7.94-6S13 2 8.06 2z m-0.06 10c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4z m2-4c0 1.11-0.89 2-2 2s-2-0.89-2-2 0.89-2 2-2 2 0.89 2 2z"></path></svg>
    Watch
  </a>
  <a class="social-count" href="/ondras/rot.js/watchers">
    85
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fondras%2Frot.js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z"></path></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="/ondras/rot.js/stargazers">
      858
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fondras%2Frot.js"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path d="M8 1c-1.11 0-2 0.89-2 2 0 0.73 0.41 1.38 1 1.72v1.28L5 8 3 6v-1.28c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72v1.78l3 3v1.78c-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72V9.5l3-3V4.72c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2zM2 4.2c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3 10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3-10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z"></path></svg>
        Fork
      </a>

    <a href="/ondras/rot.js/network" class="social-count">
      129
    </a>
  </li>
</ul>

    <h1 class="entry-title public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M4 9h-1v-1h1v1z m0-3h-1v1h1v-1z m0-2h-1v1h1v-1z m0-2h-1v1h1v-1z m8-1v12c0 0.55-0.45 1-1 1H6v2l-1.5-1.5-1.5 1.5V14H1c-0.55 0-1-0.45-1-1V1C0 0.45 0.45 0 1 0h10c0.55 0 1 0.45 1 1z m-1 10H1v2h2v-1h3v1h5V11z m0-10H2v9h9V1z"></path></svg>
  <span class="author" itemprop="author"><a href="/ondras" class="url fn" rel="author">ondras</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/ondras/rot.js" data-pjax="#js-repo-pjax-container">rot.js</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/ondras/rot.js" aria-selected="true" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /ondras/rot.js" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M9.5 3l-1.5 1.5 3.5 3.5L8 11.5l1.5 1.5 4.5-5L9.5 3zM4.5 3L0 8l4.5 5 1.5-1.5L2.5 8l3.5-3.5L4.5 3z"></path></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/ondras/rot.js/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /ondras/rot.js/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8s2.56-5.7 5.7-5.7m0-1.3C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7S10.86 1 7 1z m1 3H6v5h2V4z m0 6H6v2h2V10z"></path></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">11</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/ondras/rot.js/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /ondras/rot.js/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M11 11.28c0-1.73 0-6.28 0-6.28-0.03-0.78-0.34-1.47-0.94-2.06s-1.28-0.91-2.06-0.94c0 0-1.02 0-1 0V0L4 3l3 3V4h1c0.27 0.02 0.48 0.11 0.69 0.31s0.3 0.42 0.31 0.69v6.28c-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72z m-1 2.92c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2zM4 3c0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72 0 1.55 0 5.56 0 6.56-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72V4.72c0.59-0.34 1-0.98 1-1.72z m-0.8 10c0 0.66-0.55 1.2-1.2 1.2s-1.2-0.55-1.2-1.2 0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2z m-1.2-8.8c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z"></path></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">4</span>
      <meta itemprop="position" content="3">
</a>  </span>



  <a href="/ondras/rot.js/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /ondras/rot.js/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0V10h3.6L4.5 8.2l0.9 5.4L9 8.5l1.6 1.5H14V8H11.5z"></path></svg>
    Pulse
</a>
  <a href="/ondras/rot.js/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /ondras/rot.js/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M16 14v1H0V0h1v14h15z m-11-1H3V8h2v5z m4 0H7V3h2v10z m4 0H11V6h2v7z"></path></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/ondras/rot.js/blob/e58e99f0033e819010e9d3d3187bb06539c3ae39/rot.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:cfe9e97b1377856c6d0d0c5039bba0af -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    title="master"
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z"></path></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/ondras/rot.js/blob/gh-pages/rot.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5L4 13 0 9l1.5-1.5 2.5 2.5 6.5-6.5 1.5 1.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text" title="gh-pages">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/ondras/rot.js/blob/master/rot.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5L4 13 0 9l1.5-1.5 2.5 2.5 6.5-6.5 1.5 1.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text" title="master">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/ondras/rot.js/blob/newhex/rot.min.js"
               data-name="newhex"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5L4 13 0 9l1.5-1.5 2.5 2.5 6.5-6.5 1.5 1.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text" title="newhex">
                newhex
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/ondras/rot.js/tree/v0.5.0/rot.min.js"
              data-name="v0.5.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5L4 13 0 9l1.5-1.5 2.5 2.5 6.5-6.5 1.5 1.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v0.5.0">
                v0.5.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="btn-group right">
    <a href="/ondras/rot.js/find/master"
          class="js-pjax-capture-input btn btn-sm"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/ondras/rot.js"><span>rot.js</span></a></span></span><span class="separator">/</span><strong class="final-path">rot.min.js</strong>
  </div>
</div>


  <div class="commit-tease">
      <span class="right">
        <a class="commit-tease-sha" href="/ondras/rot.js/commit/74117c6b1160c57ada1599c1310888a765f48b3d" data-pjax>
          74117c6
        </a>
        <relative-time datetime="2015-09-03T05:15:00Z">Sep 3, 2015</relative-time>
      </span>
      <div>
        <img alt="@ondras" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/192172?v=3&amp;s=40" width="20" />
        <a href="/ondras" class="user-mention" rel="author">ondras</a>
          <a href="/ondras/rot.js/commit/74117c6b1160c57ada1599c1310888a765f48b3d" class="message" data-pjax="true" title="cleaning up features.js, fixes #61">cleaning up features.js, fixes</a> <a href="https://github.com/ondras/rot.js/issues/61" class="issue-link js-issue-link" data-url="https://github.com/ondras/rot.js/issues/61" data-id="74664211" data-error-text="Failed to load issue title" data-permission-text="Issue title is private">#61</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>4</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="ondras" href="/ondras/rot.js/commits/master/rot.min.js?author=ondras"><img alt="@ondras" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/192172?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="thesnarky1" href="/ondras/rot.js/commits/master/rot.min.js?author=thesnarky1"><img alt="@thesnarky1" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/13543?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="statico" href="/ondras/rot.js/commits/master/rot.min.js?author=statico"><img alt="@statico" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/137158?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="albinodervall" href="/ondras/rot.js/commits/master/rot.min.js?author=albinodervall"><img alt="@albinodervall" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/3341107?v=3&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@ondras" height="24" src="https://avatars0.githubusercontent.com/u/192172?v=3&amp;s=48" width="24" />
            <a href="/ondras">ondras</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@thesnarky1" height="24" src="https://avatars1.githubusercontent.com/u/13543?v=3&amp;s=48" width="24" />
            <a href="/thesnarky1">thesnarky1</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@statico" height="24" src="https://avatars0.githubusercontent.com/u/137158?v=3&amp;s=48" width="24" />
            <a href="/statico">statico</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@albinodervall" height="24" src="https://avatars2.githubusercontent.com/u/3341107?v=3&amp;s=48" width="24" />
            <a href="/albinodervall">albinodervall</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="btn-group">
      <a href="/ondras/rot.js/raw/master/rot.min.js" class="btn btn-sm " id="raw-url">Raw</a>
        <a href="/ondras/rot.js/blame/master/rot.min.js" class="btn btn-sm js-update-url-with-hash">Blame</a>
      <a href="/ondras/rot.js/commits/master/rot.min.js" class="btn btn-sm " rel="nofollow">History</a>
    </div>


        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M0 12v3h3l8-8-3-3L0 12z m3 2H1V12h1v1h1v1z m10.3-9.3l-1.3 1.3-3-3 1.3-1.3c0.39-0.39 1.02-0.39 1.41 0l1.59 1.59c0.39 0.39 0.39 1.02 0 1.41z"></path></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M10 2H8c0-0.55-0.45-1-1-1H4c-0.55 0-1 0.45-1 1H1c-0.55 0-1 0.45-1 1v1c0 0.55 0.45 1 1 1v9c0 0.55 0.45 1 1 1h7c0.55 0 1-0.45 1-1V5c0.55 0 1-0.45 1-1v-1c0-0.55-0.45-1-1-1z m-1 12H2V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9z m1-10H1v-1h9v1z"></path></svg>
        </button>
  </div>

  <div class="file-info">
      155 lines (154 sloc)
      <span class="file-info-divider"></span>
    62.2 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">ROT</span><span class="pl-k">=</span>{<span class="pl-en">isSupported</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span>(<span class="pl-k">!</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">getContext</span><span class="pl-k">||!</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">bind</span>)},DEFAULT_WIDTH<span class="pl-k">:</span><span class="pl-c1">80</span>,DEFAULT_HEIGHT<span class="pl-k">:</span><span class="pl-c1">25</span>,DIRS<span class="pl-k">:</span>{<span class="pl-c1">4</span><span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>]],<span class="pl-c1">8</span><span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]],<span class="pl-c1">6</span><span class="pl-k">:</span>[[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">2</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">0</span>]]},VK_CANCEL<span class="pl-k">:</span><span class="pl-c1">3</span>,VK_HELP<span class="pl-k">:</span><span class="pl-c1">6</span>,VK_BACK_SPACE<span class="pl-k">:</span><span class="pl-c1">8</span>,VK_TAB<span class="pl-k">:</span><span class="pl-c1">9</span>,VK_CLEAR<span class="pl-k">:</span><span class="pl-c1">12</span>,VK_RETURN<span class="pl-k">:</span><span class="pl-c1">13</span>,VK_ENTER<span class="pl-k">:</span><span class="pl-c1">14</span>,VK_SHIFT<span class="pl-k">:</span><span class="pl-c1">16</span>,VK_CONTROL<span class="pl-k">:</span><span class="pl-c1">17</span>,VK_ALT<span class="pl-k">:</span><span class="pl-c1">18</span>,VK_PAUSE<span class="pl-k">:</span><span class="pl-c1">19</span>,VK_CAPS_LOCK<span class="pl-k">:</span><span class="pl-c1">20</span>,VK_ESCAPE<span class="pl-k">:</span><span class="pl-c1">27</span>,VK_SPACE<span class="pl-k">:</span><span class="pl-c1">32</span>,VK_PAGE_UP<span class="pl-k">:</span><span class="pl-c1">33</span>,VK_PAGE_DOWN<span class="pl-k">:</span><span class="pl-c1">34</span>,VK_END<span class="pl-k">:</span><span class="pl-c1">35</span>,</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">VK_HOME<span class="pl-k">:</span><span class="pl-c1">36</span>,VK_LEFT<span class="pl-k">:</span><span class="pl-c1">37</span>,VK_UP<span class="pl-k">:</span><span class="pl-c1">38</span>,VK_RIGHT<span class="pl-k">:</span><span class="pl-c1">39</span>,VK_DOWN<span class="pl-k">:</span><span class="pl-c1">40</span>,VK_PRINTSCREEN<span class="pl-k">:</span><span class="pl-c1">44</span>,VK_INSERT<span class="pl-k">:</span><span class="pl-c1">45</span>,VK_DELETE<span class="pl-k">:</span><span class="pl-c1">46</span>,VK_0<span class="pl-k">:</span><span class="pl-c1">48</span>,VK_1<span class="pl-k">:</span><span class="pl-c1">49</span>,VK_2<span class="pl-k">:</span><span class="pl-c1">50</span>,VK_3<span class="pl-k">:</span><span class="pl-c1">51</span>,VK_4<span class="pl-k">:</span><span class="pl-c1">52</span>,VK_5<span class="pl-k">:</span><span class="pl-c1">53</span>,VK_6<span class="pl-k">:</span><span class="pl-c1">54</span>,VK_7<span class="pl-k">:</span><span class="pl-c1">55</span>,VK_8<span class="pl-k">:</span><span class="pl-c1">56</span>,VK_9<span class="pl-k">:</span><span class="pl-c1">57</span>,VK_COLON<span class="pl-k">:</span><span class="pl-c1">58</span>,VK_SEMICOLON<span class="pl-k">:</span><span class="pl-c1">59</span>,VK_LESS_THAN<span class="pl-k">:</span><span class="pl-c1">60</span>,VK_EQUALS<span class="pl-k">:</span><span class="pl-c1">61</span>,VK_GREATER_THAN<span class="pl-k">:</span><span class="pl-c1">62</span>,VK_QUESTION_MARK<span class="pl-k">:</span><span class="pl-c1">63</span>,VK_AT<span class="pl-k">:</span><span class="pl-c1">64</span>,VK_A<span class="pl-k">:</span><span class="pl-c1">65</span>,VK_B<span class="pl-k">:</span><span class="pl-c1">66</span>,VK_C<span class="pl-k">:</span><span class="pl-c1">67</span>,VK_D<span class="pl-k">:</span><span class="pl-c1">68</span>,VK_E<span class="pl-k">:</span><span class="pl-c1">69</span>,VK_F<span class="pl-k">:</span><span class="pl-c1">70</span>,VK_G<span class="pl-k">:</span><span class="pl-c1">71</span>,VK_H<span class="pl-k">:</span><span class="pl-c1">72</span>,VK_I<span class="pl-k">:</span><span class="pl-c1">73</span>,VK_J<span class="pl-k">:</span><span class="pl-c1">74</span>,VK_K<span class="pl-k">:</span><span class="pl-c1">75</span>,VK_L<span class="pl-k">:</span><span class="pl-c1">76</span>,VK_M<span class="pl-k">:</span><span class="pl-c1">77</span>,VK_N<span class="pl-k">:</span><span class="pl-c1">78</span>,VK_O<span class="pl-k">:</span><span class="pl-c1">79</span>,VK_P<span class="pl-k">:</span><span class="pl-c1">80</span>,VK_Q<span class="pl-k">:</span><span class="pl-c1">81</span>,VK_R<span class="pl-k">:</span><span class="pl-c1">82</span>,VK_S<span class="pl-k">:</span><span class="pl-c1">83</span>,VK_T<span class="pl-k">:</span><span class="pl-c1">84</span>,VK_U<span class="pl-k">:</span><span class="pl-c1">85</span>,VK_V<span class="pl-k">:</span><span class="pl-c1">86</span>,VK_W<span class="pl-k">:</span><span class="pl-c1">87</span>,VK_X<span class="pl-k">:</span><span class="pl-c1">88</span>,VK_Y<span class="pl-k">:</span><span class="pl-c1">89</span>,VK_Z<span class="pl-k">:</span><span class="pl-c1">90</span>,VK_CONTEXT_MENU<span class="pl-k">:</span><span class="pl-c1">93</span>,</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">VK_NUMPAD0<span class="pl-k">:</span><span class="pl-c1">96</span>,VK_NUMPAD1<span class="pl-k">:</span><span class="pl-c1">97</span>,VK_NUMPAD2<span class="pl-k">:</span><span class="pl-c1">98</span>,VK_NUMPAD3<span class="pl-k">:</span><span class="pl-c1">99</span>,VK_NUMPAD4<span class="pl-k">:</span><span class="pl-c1">100</span>,VK_NUMPAD5<span class="pl-k">:</span><span class="pl-c1">101</span>,VK_NUMPAD6<span class="pl-k">:</span><span class="pl-c1">102</span>,VK_NUMPAD7<span class="pl-k">:</span><span class="pl-c1">103</span>,VK_NUMPAD8<span class="pl-k">:</span><span class="pl-c1">104</span>,VK_NUMPAD9<span class="pl-k">:</span><span class="pl-c1">105</span>,VK_MULTIPLY<span class="pl-k">:</span><span class="pl-c1">106</span>,VK_ADD<span class="pl-k">:</span><span class="pl-c1">107</span>,VK_SEPARATOR<span class="pl-k">:</span><span class="pl-c1">108</span>,VK_SUBTRACT<span class="pl-k">:</span><span class="pl-c1">109</span>,VK_DECIMAL<span class="pl-k">:</span><span class="pl-c1">110</span>,VK_DIVIDE<span class="pl-k">:</span><span class="pl-c1">111</span>,VK_F1<span class="pl-k">:</span><span class="pl-c1">112</span>,VK_F2<span class="pl-k">:</span><span class="pl-c1">113</span>,VK_F3<span class="pl-k">:</span><span class="pl-c1">114</span>,VK_F4<span class="pl-k">:</span><span class="pl-c1">115</span>,VK_F5<span class="pl-k">:</span><span class="pl-c1">116</span>,VK_F6<span class="pl-k">:</span><span class="pl-c1">117</span>,VK_F7<span class="pl-k">:</span><span class="pl-c1">118</span>,VK_F8<span class="pl-k">:</span><span class="pl-c1">119</span>,VK_F9<span class="pl-k">:</span><span class="pl-c1">120</span>,VK_F10<span class="pl-k">:</span><span class="pl-c1">121</span>,VK_F11<span class="pl-k">:</span><span class="pl-c1">122</span>,VK_F12<span class="pl-k">:</span><span class="pl-c1">123</span>,VK_F13<span class="pl-k">:</span><span class="pl-c1">124</span>,VK_F14<span class="pl-k">:</span><span class="pl-c1">125</span>,VK_F15<span class="pl-k">:</span><span class="pl-c1">126</span>,VK_F16<span class="pl-k">:</span><span class="pl-c1">127</span>,VK_F17<span class="pl-k">:</span><span class="pl-c1">128</span>,VK_F18<span class="pl-k">:</span><span class="pl-c1">129</span>,VK_F19<span class="pl-k">:</span><span class="pl-c1">130</span>,VK_F20<span class="pl-k">:</span><span class="pl-c1">131</span>,VK_F21<span class="pl-k">:</span><span class="pl-c1">132</span>,VK_F22<span class="pl-k">:</span><span class="pl-c1">133</span>,VK_F23<span class="pl-k">:</span><span class="pl-c1">134</span>,VK_F24<span class="pl-k">:</span><span class="pl-c1">135</span>,VK_NUM_LOCK<span class="pl-k">:</span><span class="pl-c1">144</span>,</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">VK_SCROLL_LOCK<span class="pl-k">:</span><span class="pl-c1">145</span>,VK_CIRCUMFLEX<span class="pl-k">:</span><span class="pl-c1">160</span>,VK_EXCLAMATION<span class="pl-k">:</span><span class="pl-c1">161</span>,VK_DOUBLE_QUOTE<span class="pl-k">:</span><span class="pl-c1">162</span>,VK_HASH<span class="pl-k">:</span><span class="pl-c1">163</span>,VK_DOLLAR<span class="pl-k">:</span><span class="pl-c1">164</span>,VK_PERCENT<span class="pl-k">:</span><span class="pl-c1">165</span>,VK_AMPERSAND<span class="pl-k">:</span><span class="pl-c1">166</span>,VK_UNDERSCORE<span class="pl-k">:</span><span class="pl-c1">167</span>,VK_OPEN_PAREN<span class="pl-k">:</span><span class="pl-c1">168</span>,VK_CLOSE_PAREN<span class="pl-k">:</span><span class="pl-c1">169</span>,VK_ASTERISK<span class="pl-k">:</span><span class="pl-c1">170</span>,VK_PLUS<span class="pl-k">:</span><span class="pl-c1">171</span>,VK_PIPE<span class="pl-k">:</span><span class="pl-c1">172</span>,VK_HYPHEN_MINUS<span class="pl-k">:</span><span class="pl-c1">173</span>,VK_OPEN_CURLY_BRACKET<span class="pl-k">:</span><span class="pl-c1">174</span>,VK_CLOSE_CURLY_BRACKET<span class="pl-k">:</span><span class="pl-c1">175</span>,VK_TILDE<span class="pl-k">:</span><span class="pl-c1">176</span>,VK_COMMA<span class="pl-k">:</span><span class="pl-c1">188</span>,VK_PERIOD<span class="pl-k">:</span><span class="pl-c1">190</span>,VK_SLASH<span class="pl-k">:</span><span class="pl-c1">191</span>,VK_BACK_QUOTE<span class="pl-k">:</span><span class="pl-c1">192</span>,VK_OPEN_BRACKET<span class="pl-k">:</span><span class="pl-c1">219</span>,VK_BACK_SLASH<span class="pl-k">:</span><span class="pl-c1">220</span>,VK_CLOSE_BRACKET<span class="pl-k">:</span><span class="pl-c1">221</span>,VK_QUOTE<span class="pl-k">:</span><span class="pl-c1">222</span>,VK_META<span class="pl-k">:</span><span class="pl-c1">224</span>,VK_ALTGR<span class="pl-k">:</span><span class="pl-c1">225</span>,VK_WIN<span class="pl-k">:</span><span class="pl-c1">91</span>,VK_KANA<span class="pl-k">:</span><span class="pl-c1">21</span>,VK_HANGUL<span class="pl-k">:</span><span class="pl-c1">21</span>,</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">VK_EISU<span class="pl-k">:</span><span class="pl-c1">22</span>,VK_JUNJA<span class="pl-k">:</span><span class="pl-c1">23</span>,VK_FINAL<span class="pl-k">:</span><span class="pl-c1">24</span>,VK_HANJA<span class="pl-k">:</span><span class="pl-c1">25</span>,VK_KANJI<span class="pl-k">:</span><span class="pl-c1">25</span>,VK_CONVERT<span class="pl-k">:</span><span class="pl-c1">28</span>,VK_NONCONVERT<span class="pl-k">:</span><span class="pl-c1">29</span>,VK_ACCEPT<span class="pl-k">:</span><span class="pl-c1">30</span>,VK_MODECHANGE<span class="pl-k">:</span><span class="pl-c1">31</span>,VK_SELECT<span class="pl-k">:</span><span class="pl-c1">41</span>,VK_PRINT<span class="pl-k">:</span><span class="pl-c1">42</span>,VK_EXECUTE<span class="pl-k">:</span><span class="pl-c1">43</span>,VK_SLEEP<span class="pl-k">:</span><span class="pl-c1">95</span>,<span class="pl-c1">Text</span><span class="pl-k">:</span>{RE_COLORS<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>%(<span class="pl-c1">[bc]</span>){(<span class="pl-c1">[<span class="pl-k">^</span>}]</span><span class="pl-k">*</span>)}<span class="pl-pds">/</span>g</span>,TYPE_TEXT<span class="pl-k">:</span><span class="pl-c1">0</span>,TYPE_NEWLINE<span class="pl-k">:</span><span class="pl-c1">1</span>,TYPE_FG<span class="pl-k">:</span><span class="pl-c1">2</span>,TYPE_BG<span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-en">measure</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">1</span>},d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">tokenize</span>(a,b),e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>d[f];<span class="pl-k">switch</span>(<span class="pl-smi">g</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-v">this</span>.<span class="pl-c1">TYPE_TEXT</span><span class="pl-k">:</span>e<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-v">this</span>.<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">++</span>,<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,e),e<span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">e);<span class="pl-k">return</span> c},<span class="pl-en">tokenize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-v">this</span>.<span class="pl-c1">RE_COLORS</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(d,l);<span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>m});<span class="pl-smi">c</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e<span class="pl-k">?</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_FG</span><span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_BG</span>,value<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">trim</span>()});d<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(d);<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>e});<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">_breakLines</span>(c,b)},<span class="pl-en">_breakLines</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-c1">Infinity</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[c];<span class="pl-smi">f</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">type</span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>)c<span class="pl-k">++</span>;<span class="pl-k">else</span>{<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);)<span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>g){<span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_breakInsideToken</span>(a,c,g,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>g[<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];)<span class="pl-smi">g</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(d<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>b){<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;;){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,g<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>h)<span class="pl-k">break</span>;<span class="pl-k">if</span>(d<span class="pl-k">+</span>h<span class="pl-k">&gt;</span>b)<span class="pl-k">break</span>;g<span class="pl-k">=</span>h}<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_breakInsideToken</span>(a,c,g,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>e<span class="pl-k">?</span>(f<span class="pl-k">=</span>a[e],c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),<span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_breakInsideToken</span>(a,e,c,<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">e)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_breakInsideToken</span>(a,c,b<span class="pl-k">-</span>d,<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> d<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>,<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>c);c<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>)}}<span class="pl-smi">a</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>});d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">switch</span>(f<span class="pl-k">=</span>a[c],<span class="pl-smi">f</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span><span class="pl-k">:</span>d<span class="pl-k">=</span>f;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">:</span><span class="pl-k">if</span>(d){<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>g[<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];)<span class="pl-smi">g</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}d<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-smi">a</span>.<span class="pl-c1">pop</span>();<span class="pl-k">return</span> a},<span class="pl-en">_breakInsideToken</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>};d<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>a[b].<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(c<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">(d<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))};<span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,e,d);<span class="pl-k">return</span> a[b].<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,c)}}};<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">random</span><span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">random</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-v">this</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-c1">length</span>)]<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">randomize</span><span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">randomize</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">indexOf</span>(<span class="pl-v">this</span>.<span class="pl-en">random</span>());<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>])}<span class="pl-k">return</span> a};<span class="pl-c1">Number</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">mod</span><span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">mod</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-v">this</span><span class="pl-k">%</span>a<span class="pl-k">+</span>a)<span class="pl-k">%</span>a};</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">capitalize</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">capitalize</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>).<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>)};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">lpad</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">lpad</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>d<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">length</span>;)e<span class="pl-k">+=</span>c;e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,d<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">length</span>);<span class="pl-k">return</span> e<span class="pl-k">+</span><span class="pl-v">this</span>};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">rpad</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">rpad</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>d<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">length</span>;)e<span class="pl-k">+=</span>c;e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,d<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">length</span>);<span class="pl-k">return</span> <span class="pl-v">this</span><span class="pl-k">+</span>e};</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">String</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span>,c<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-v">arguments</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%(?:(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-k">|</span>(?:{(<span class="pl-c1">[<span class="pl-k">^</span>}]</span><span class="pl-k">+</span>)}))<span class="pl-pds">/</span>gi</span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(g<span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> d;g<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];f<span class="pl-k">=</span>(e<span class="pl-k">||</span>f).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">shift</span>();<span class="pl-k">var</span> h<span class="pl-k">=</span>b[<span class="pl-smi">e</span>.<span class="pl-c1">toLowerCase</span>()];<span class="pl-k">if</span>(<span class="pl-k">!</span>h)<span class="pl-k">return</span> d;g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">shift</span>();d<span class="pl-k">=</span>g[h].<span class="pl-c1">apply</span>(g,f);g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);g<span class="pl-k">!=</span><span class="pl-smi">g</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">capitalize</span>());<span class="pl-k">return</span> d})};<span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span><span class="pl-k">||</span>{s<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>toString<span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">format</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-v">arguments</span>);<span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>(<span class="pl-v">this</span>);<span class="pl-k">return</span> <span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">String</span>,a)};<span class="pl-c1">Object</span>.<span class="pl-smi">create</span><span class="pl-k">||</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> <span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">b</span>});<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extend</span><span class="pl-k">=</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extend</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>);<span class="pl-v">this</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">oRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">setTimeout</span>(a,<span class="pl-c1">1E3</span><span class="pl-k">/</span><span class="pl-c1">60</span>)},<span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">oCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">clearTimeout</span>(a)});</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-en">Display</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_context</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_backend</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DEFAULT_WIDTH</span>,height<span class="pl-k">:</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DEFAULT_HEIGHT</span>,transpose<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,layout<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-c1">15</span>,spacing<span class="pl-k">:</span><span class="pl-c1">1</span>,border<span class="pl-k">:</span><span class="pl-c1">0</span>,forceSquareRatio<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fontFamily<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>monospace<span class="pl-pds">&quot;</span></span>,fontStyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,fg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ccc<span class="pl-pds">&quot;</span></span>,bg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>,tileWidth<span class="pl-k">:</span><span class="pl-c1">32</span>,tileHeight<span class="pl-k">:</span><span class="pl-c1">32</span>,tileMap<span class="pl-k">:</span>{},tileSet<span class="pl-k">:</span><span class="pl-c1">null</span>,tileColorize<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,termColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xterm<span class="pl-pds">&quot;</span></span>},c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)b[c]<span class="pl-k">=</span>a[c];<span class="pl-v">this</span>.<span class="pl-en">setOptions</span>(b);<span class="pl-v">this</span>.<span class="pl-c1">DEBUG</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">DEBUG</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">_tick</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_tick</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-en">requestAnimationFrame</span>(<span class="pl-v">this</span>.<span class="pl-smi">_tick</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">DEBUG</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fg</span>];<span class="pl-v">this</span>.<span class="pl-en">draw</span>(a,b,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d[c<span class="pl-k">%</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>])};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[b]<span class="pl-k">=</span>a[b];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">fontFamily</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">layout</span>)<span class="pl-smi">a</span>.<span class="pl-smi">layout</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_backend</span><span class="pl-k">=</span><span class="pl-k">new</span> (<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>[<span class="pl-smi">a</span>.<span class="pl-smi">layout</span>.<span class="pl-en">capitalize</span>()])(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>)),a<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fontStyle</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fontStyle</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontSize</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">compute</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">textAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">textBaseline</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_options</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getContainer</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">computeSize</span>(a,b,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">computeFontSize</span>(a,b,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>)};</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">touches</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>].<span class="pl-smi">clientX</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>].<span class="pl-smi">clientY</span>}<span class="pl-k">else</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-en">getBoundingClientRect</span>(),b<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">left</span>;a<span class="pl-k">-=</span><span class="pl-smi">c</span>.<span class="pl-c1">top</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">?</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">eventToPosition</span>(b,a)};</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){d<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fg</span>);e<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>);<span class="pl-v">this</span>.<span class="pl-smi">_data</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span>[a,b,c,d,e];<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span>{}),<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)};</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawText</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span><span class="pl-c1">null</span>,g<span class="pl-k">=</span>a,h<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>a);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-en">tokenize</span>(c,d);<span class="pl-smi">c</span>.<span class="pl-c1">length</span>;)<span class="pl-k">switch</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">shift</span>(),<span class="pl-smi">d</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span><span class="pl-k">:</span><span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,q<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charCodeAt</span>(n),r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charAt</span>(n),p<span class="pl-k">=</span><span class="pl-c1">255</span><span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">65377</span><span class="pl-k">&gt;</span>l<span class="pl-k">||</span><span class="pl-c1">65500</span><span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">65512</span><span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">65518</span><span class="pl-k">&lt;</span>l,l<span class="pl-k">=</span><span class="pl-c1">32</span><span class="pl-k">==</span><span class="pl-smi">r</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">||</span><span class="pl-c1">12288</span><span class="pl-k">==</span><span class="pl-smi">r</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">!</span>q<span class="pl-k">||</span>p<span class="pl-k">||</span>l<span class="pl-k">||</span>g<span class="pl-k">++</span>;p<span class="pl-k">&amp;&amp;!</span>m<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">++</span>;<span class="pl-v">this</span>.<span class="pl-en">draw</span>(g<span class="pl-k">++</span>,b,r,e,f);m<span class="pl-k">=</span>l;q<span class="pl-k">=</span>p}<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_FG</span><span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">null</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_BG</span><span class="pl-k">:</span>f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">null</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">:</span>g<span class="pl-k">=</span>a,b<span class="pl-k">++</span>,h<span class="pl-k">++</span>}<span class="pl-k">return</span> h};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tick</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">requestAnimationFrame</span>(<span class="pl-v">this</span>.<span class="pl-smi">_tick</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">_dirty</span>){<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_data</span>)<span class="pl-v">this</span>.<span class="pl-en">_draw</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_dirty</span>)<span class="pl-v">this</span>.<span class="pl-en">_draw</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_data</span>[a];c[<span class="pl-c1">4</span>]<span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">draw</span>(c,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Backend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_context</span><span class="pl-k">=</span>a};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){};</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Rect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">_canvasCache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>);<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_canvasCache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>b);<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span>);<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">forceSquareRatio</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>,<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>));<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>};</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span>.<span class="pl-smi">cache</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">_drawWithCache</span>(a,b)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">_drawNoCache</span>(a,b)};</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawWithCache</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span>f<span class="pl-k">+</span>g;<span class="pl-k">if</span>(h <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_canvasCache</span>)<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_canvasCache</span>[h];<span class="pl-k">else</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>,l<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>),p<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">l</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>;<span class="pl-smi">l</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>;<span class="pl-smi">p</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>g;<span class="pl-smi">p</span>.<span class="pl-en">fillRect</span>(m,m,<span class="pl-smi">l</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>m,<span class="pl-smi">l</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>m);<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(<span class="pl-smi">p</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>f,<span class="pl-smi">p</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>,<span class="pl-smi">p</span>.<span class="pl-c1">textAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">p</span>.<span class="pl-smi">textBaseline</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(e),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-smi">p</span>.<span class="pl-en">fillText</span>(e[f],<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">/</span><span class="pl-c1">2</span>));<span class="pl-v">this</span>.<span class="pl-smi">_canvasCache</span>[h]<span class="pl-k">=</span>l}<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(l,c<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>,d<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawNoCache</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];<span class="pl-k">if</span>(b){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(c<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>h,d<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span>h,<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>h,<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">-</span>h)}<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>f,e<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(e),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillText</span>(e[f],(c<span class="pl-k">+</span><span class="pl-c1">.5</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((d<span class="pl-k">+</span><span class="pl-c1">.5</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>))};</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>)]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span>),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span>),e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>100px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>e;c<span class="pl-k">=</span>f<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">*</span>d<span class="pl-k">/</span>c;<span class="pl-c1">1</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d<span class="pl-k">/</span>c));<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">spacing</span>)};</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span>)]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Hex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>);</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span><span class="pl-k">+</span>b<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">1.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">transpose</span>)<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>[b]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>);<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>[c]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span>)};</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],f<span class="pl-k">=</span>[(a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>,a[<span class="pl-c1">1</span>]<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span>];<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">reverse</span>();b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>e,<span class="pl-v">this</span>.<span class="pl-en">_fill</span>(f[<span class="pl-c1">0</span>],f[<span class="pl-c1">1</span>]));<span class="pl-k">if</span>(c)<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>d,c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillText</span>(c[d],f[<span class="pl-c1">0</span>],<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(f[<span class="pl-c1">1</span>]))};</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span>b,b<span class="pl-k">=</span>a<span class="pl-k">-</span>b,a<span class="pl-k">-=</span>b);<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((b<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span>)<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-c1">1</span>)]};</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span>b,b<span class="pl-k">=</span>a<span class="pl-k">-</span>b,a<span class="pl-k">-=</span>b);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>a<span class="pl-k">/</span>((<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(c,b<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>))),d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>100px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>d;c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c)<span class="pl-k">+</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">/</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>e<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)));<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(c)<span class="pl-k">-</span><span class="pl-c1">1</span>};</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span>){a<span class="pl-k">+=</span>b;b<span class="pl-k">=</span>a<span class="pl-k">-</span>b;a<span class="pl-k">-=</span>b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>[c]<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>[c]));<span class="pl-smi">b</span>.<span class="pl-en">mod</span>(<span class="pl-c1">2</span>)<span class="pl-k">?</span>(a<span class="pl-k">-=</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>,a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>)))<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span>));<span class="pl-k">return</span>[a,b]};</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_fill</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_hexSize</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">beginPath</span>();<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">moveTo</span>(a<span class="pl-k">-</span>c<span class="pl-k">+</span>d,b),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>d,b<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>d,b<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>c<span class="pl-k">-</span>d,b),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>d,b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>d,b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>c<span class="pl-k">+</span>d,b))<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">moveTo</span>(a,b<span class="pl-k">-</span>c<span class="pl-k">+</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>d,b<span class="pl-k">-</span>c<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">+</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>d,b<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a,b<span class="pl-k">+</span>c<span class="pl-k">-</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>d,b<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>d,b<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>d),<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a,b<span class="pl-k">-</span>c<span class="pl-k">+</span>d));<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fill</span>()};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Tile</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_colorCanvas</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>);</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">tileWidth</span>;<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">tileHeight</span>;<span class="pl-v">this</span>.<span class="pl-smi">_colorCanvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tileWidth</span>;<span class="pl-v">this</span>.<span class="pl-smi">_colorCanvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tileHeight</span>};</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileColorize</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">clearRect</span>(c<span class="pl-k">*</span>h,d<span class="pl-k">*</span>l,h,l)<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>g,<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(c<span class="pl-k">*</span>h,d<span class="pl-k">*</span>l,h,l)));<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(e),m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileMap</span>[e[m]];<span class="pl-k">if</span>(<span class="pl-k">!</span>p)<span class="pl-k">throw</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Char &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e[m]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; not found in tileMap<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileColorize</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_colorCanvas</span>,n<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">n</span>.<span class="pl-en">clearRect</span>(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,h,l);<span class="pl-smi">n</span>.<span class="pl-en">drawImage</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileSet</span>,p[<span class="pl-c1">0</span>],p[<span class="pl-c1">1</span>],h,l,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,l);<span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>f,<span class="pl-smi">n</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>source-atop<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">n</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,l));<span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>g,<span class="pl-smi">n</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>destination-over<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">n</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,l));<span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(q,c<span class="pl-k">*</span>h,d<span class="pl-k">*</span>l,h,l)}<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileSet</span>,p[<span class="pl-c1">0</span>],p[<span class="pl-c1">1</span>],h,l,c<span class="pl-k">*</span>h,d<span class="pl-k">*</span>l,h,l)}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>)]};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span>)]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>)]};</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span><span class="pl-k">=</span>{<span class="pl-en">getSeed</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_seed</span>},<span class="pl-en">setSeed</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_seed</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>a<span class="pl-k">:</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span>(a<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_frac</span>;a<span class="pl-k">=</span><span class="pl-c1">69069</span><span class="pl-k">*</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-v">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>(<span class="pl-c1">69069</span><span class="pl-k">*</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-v">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">getUniform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">2091639</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_c</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-v">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_s1</span>;<span class="pl-v">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_s2</span>;<span class="pl-v">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_c</span>},<span class="pl-en">getUniformInt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,b),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(a,b);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(c<span class="pl-k">-</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">+</span>d},<span class="pl-en">getNormal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">do</span> <span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span>c<span class="pl-k">*</span>c<span class="pl-k">+</span>d<span class="pl-k">*</span>d;<span class="pl-k">while</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>d);c<span class="pl-k">*=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(d)<span class="pl-k">/</span>d);<span class="pl-k">return</span>(a<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>c<span class="pl-k">*</span>(b<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">getPercentage</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">100</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-en">getUniform</span>())},<span class="pl-en">getWeightedValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)b<span class="pl-k">+=</span>a[c];<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>b,d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-k">if</span>(d<span class="pl-k">+=</span>a[c],b<span class="pl-k">&lt;</span>d)<span class="pl-k">break</span>;<span class="pl-k">return</span> c},<span class="pl-en">getState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-v">this</span>.<span class="pl-smi">_s0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_s1</span>,<span class="pl-v">this</span>.<span class="pl-smi">_s2</span>,<span class="pl-v">this</span>.<span class="pl-smi">_c</span>]},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-v">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>];<span class="pl-v">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-v">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span>a[<span class="pl-c1">3</span>];<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-v">this</span>.<span class="pl-en">getState</span>());<span class="pl-k">return</span> a},_s0<span class="pl-k">:</span><span class="pl-c1">0</span>,_s1<span class="pl-k">:</span><span class="pl-c1">0</span>,_s2<span class="pl-k">:</span><span class="pl-c1">0</span>,_c<span class="pl-k">:</span><span class="pl-c1">0</span>,_frac<span class="pl-k">:</span><span class="pl-c1">2.3283064365386963E-10</span>};<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">setSeed</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-c1">ROT</span>.<span class="pl-en">StringGenerator</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{words<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,order<span class="pl-k">:</span><span class="pl-c1">3</span>,prior<span class="pl-k">:</span><span class="pl-c1">.001</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[b]<span class="pl-k">=</span>a[b];<span class="pl-v">this</span>.<span class="pl-smi">_suffix</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_boundary</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">_prefix</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>;a<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-smi">_boundary</span>);<span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span>[<span class="pl-v">this</span>.<span class="pl-smi">_boundary</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>;<span class="pl-v">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{}};</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span><span class="pl-k">=</span>{}};<span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">generate</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-en">_sample</span>(<span class="pl-v">this</span>.<span class="pl-smi">_prefix</span>)];a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_boundary</span>;)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-en">_sample</span>(a));<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">_join</span>(<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>))};</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">observe</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_split</span>(a);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span>[a[b]]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">concat</span>(a).<span class="pl-c1">concat</span>(<span class="pl-v">this</span>.<span class="pl-smi">_suffix</span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>,b),d<span class="pl-k">=</span>a[b],e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(e);<span class="pl-v">this</span>.<span class="pl-en">_observeEvent</span>(f,d)}};</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getStats</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">0</span>,c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span>)b<span class="pl-k">++</span>;b<span class="pl-k">--</span>;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>distinct samples: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);<span class="pl-k">var</span> d<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_data</span>){b<span class="pl-k">++</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_data</span>[c])d<span class="pl-k">++</span>}<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dictionary size (contexts): <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dictionary size (events): <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_split</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">words</span><span class="pl-k">?</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_join</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">words</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_observeEvent</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_join</span>(a);c <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_data</span><span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-smi">_data</span>[c]<span class="pl-k">=</span>{});c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_data</span>[c];b <span class="pl-k">in</span> c<span class="pl-k">||</span>(c[b]<span class="pl-k">=</span><span class="pl-c1">0</span>);c[b]<span class="pl-k">++</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_sample</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_backoff</span>(a);a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_join</span>(a);a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_data</span>[a];<span class="pl-k">var</span> b<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span>)b[c]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_priorValues</span>[c];<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)b[c]<span class="pl-k">+=</span>a[c]}<span class="pl-k">else</span> b<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getWeightedValue</span>(b)};</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_backoff</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>).<span class="pl-c1">concat</span>(a));<span class="pl-k">!</span>(<span class="pl-v">this</span>.<span class="pl-en">_join</span>(a)<span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_data</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);<span class="pl-k">return</span> a};<span class="pl-c1">ROT</span>.<span class="pl-en">EventQueue</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_time</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span><span class="pl-k">=</span>[]};<span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTime</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_time</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span><span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">length</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>[d]<span class="pl-k">&gt;</span>b){c<span class="pl-k">=</span>d;<span class="pl-k">break</span>}<span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">0</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">0</span>,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a){<span class="pl-v">this</span>.<span class="pl-smi">_time</span><span class="pl-k">+=</span>a;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>[b]<span class="pl-k">-=</span>a}<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]};</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-en">_remove</span>(a);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>)};<span class="pl-c1">ROT</span>.<span class="pl-en">Scheduler</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_queue</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ROT.EventQueue</span>;<span class="pl-v">this</span>.<span class="pl-smi">_repeat</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTime</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">getTime</span>()};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">clear</span>();<span class="pl-v">this</span>.<span class="pl-smi">_repeat</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-en">remove</span>(a),c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> b};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-en">get</span>()};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Simple</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Speed</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>);</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">getSpeed</span>());<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">_current</span>.<span class="pl-en">getSpeed</span>());<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Action</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span><span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>);</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,c<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span>;<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">clear</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">remove</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a)};</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">_current</span>,<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span>),<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setDuration</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span>a);<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-en">Engine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_scheduler</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">start</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">unlock</span>()};</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">lock</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">unlock</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_lock</span>)<span class="pl-k">throw</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot unlock unlocked engine<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">--</span>;<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_lock</span>;){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_scheduler</span>.<span class="pl-c1">next</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">lock</span>();(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">act</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">then</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">lock</span>(),<span class="pl-smi">a</span>.<span class="pl-en">then</span>(<span class="pl-v">this</span>.<span class="pl-smi">unlock</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>)))}<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-en">Map</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DEFAULT_WIDTH</span>;<span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DEFAULT_HEIGHT</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_fillMap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>){<span class="pl-smi">b</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)b[c].<span class="pl-c1">push</span>(a)}<span class="pl-k">return</span> b};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Arena</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Arena</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Arena</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;=</span>b;d<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;=</span>c;e<span class="pl-k">++</span>)<span class="pl-en">a</span>(d,e,d<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">DividedMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_stack</span><span class="pl-k">=</span>[]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>){<span class="pl-v">this</span>.<span class="pl-smi">_map</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d].<span class="pl-c1">push</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>e<span class="pl-k">||</span>d<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">||</span>e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>c<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)}<span class="pl-v">this</span>.<span class="pl-smi">_stack</span><span class="pl-k">=</span>[[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">2</span>,c<span class="pl-k">-</span><span class="pl-c1">2</span>]];<span class="pl-v">this</span>.<span class="pl-en">_process</span>();<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-en">a</span>(d,e,<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d][e]);<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_process</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(;<span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">shift</span>();<span class="pl-v">this</span>.<span class="pl-en">_partitionRoom</span>(a)}};</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_partitionRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span>a[<span class="pl-c1">2</span>];d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d][a[<span class="pl-c1">3</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d][a[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||!</span>e<span class="pl-k">||</span>d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(d)}<span class="pl-k">for</span>(d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span>a[<span class="pl-c1">3</span>];d<span class="pl-k">++</span>)e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>][d],<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>][d]<span class="pl-k">||!</span>e<span class="pl-k">||</span>d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(d);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">random</span>();c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">random</span>();<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][c]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">for</span>(d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d][c]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>([d,c]);f<span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">for</span>(d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;=</span>a[<span class="pl-c1">2</span>];d<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[d][c]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>([d,c]);f<span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">for</span>(d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][d]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>([b,d]);f<span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">for</span>(d<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;=</span>a[<span class="pl-c1">3</span>];d<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][d]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>([b,d]);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">random</span>(),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)f<span class="pl-k">=</span>e[d],f<span class="pl-k">!=</span>g<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">random</span>(),<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[f[<span class="pl-c1">0</span>]][f[<span class="pl-c1">1</span>]]<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([a[<span class="pl-c1">0</span>],a[<span class="pl-c1">1</span>],b<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([b<span class="pl-k">+</span><span class="pl-c1">1</span>,a[<span class="pl-c1">1</span>],a[<span class="pl-c1">2</span>],c<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([a[<span class="pl-c1">0</span>],c<span class="pl-k">+</span><span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">3</span>]]);<span class="pl-v">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([b<span class="pl-k">+</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span><span class="pl-c1">1</span>,a[<span class="pl-c1">2</span>],a[<span class="pl-c1">3</span>]])}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">IceyMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_regularity</span><span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">0</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>),b<span class="pl-k">=</span>b<span class="pl-k">-</span>(b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>),c<span class="pl-k">=</span>c<span class="pl-k">-</span>(c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,p<span class="pl-k">=</span>[[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]];<span class="pl-k">do</span> <span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(b<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),l<span class="pl-k">||</span>(d[e][f]<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-k">!</span>d[e][f]){<span class="pl-v">this</span>.<span class="pl-en">_randomize</span>(p);<span class="pl-k">do</span>{<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(<span class="pl-v">this</span>.<span class="pl-smi">_regularity</span><span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">_randomize</span>(p);<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>q;q<span class="pl-k">++</span>)<span class="pl-k">if</span>(g<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>p[q][<span class="pl-c1">0</span>],h<span class="pl-k">=</span>f<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>p[q][<span class="pl-c1">1</span>],<span class="pl-v">this</span>.<span class="pl-en">_isFree</span>(d,g,h,b,c)){d[g][h]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[e<span class="pl-k">+</span>p[q][<span class="pl-c1">0</span>]][f<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">p[q][<span class="pl-c1">1</span>]]<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span>g;f<span class="pl-k">=</span>h;m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;l<span class="pl-k">++</span>;<span class="pl-k">break</span>}}<span class="pl-k">while</span>(<span class="pl-k">!</span>m)}<span class="pl-k">while</span>(l<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>b<span class="pl-k">*</span>c<span class="pl-k">/</span><span class="pl-c1">4</span>);<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;q<span class="pl-k">++</span>)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;b<span class="pl-k">++</span>)<span class="pl-en">a</span>(q,b,d[q][b]);<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_randomize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>)a[b][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,a[b][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">switch</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>())){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">2</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">3</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>a[<span class="pl-c1">3</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">2</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>a[<span class="pl-c1">2</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">3</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>a[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>,a[<span class="pl-c1">3</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">2</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isFree</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span>d<span class="pl-k">||</span>c<span class="pl-k">&gt;=</span>e<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>a[b][c]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">EllerMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(f),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;g<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>f<span class="pl-k">+</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>g;b[h][l]<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">!=</span>d[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">_addToList</span>(f,d,e),b[h<span class="pl-k">+</span><span class="pl-c1">1</span>][l]<span class="pl-k">=</span><span class="pl-c1">0</span>);f<span class="pl-k">!=</span>d[f]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">_removeFromList</span>(f,d,e)<span class="pl-k">:</span>b[h][l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)h<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>f<span class="pl-k">+</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>g,b[h][l]<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">!=</span>d[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">==</span>d[f]<span class="pl-k">||</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>())<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">_addToList</span>(f,d,e),b[h<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>][l]<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-v">this</span>.<span class="pl-en">_removeFromList</span>(f,d,e);<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;g<span class="pl-k">++</span>)<span class="pl-en">a</span>(f,g,b[f][g]);<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_removeFromList</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c[b[a]]<span class="pl-k">=</span>c[a];b[c[a]]<span class="pl-k">=</span>b[a];c[a]<span class="pl-k">=</span>a;b[a]<span class="pl-k">=</span>a};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_addToList</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c[b[a<span class="pl-k">+</span><span class="pl-c1">1</span>]]<span class="pl-k">=</span>c[a];b[c[a]]<span class="pl-k">=</span>b[a<span class="pl-k">+</span><span class="pl-c1">1</span>];c[a]<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;b[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>a};</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Cellular</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{born<span class="pl-k">:</span>[<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>],survive<span class="pl-k">:</span>[<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>],topology<span class="pl-k">:</span><span class="pl-c1">8</span>,connected<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-v">this</span>.<span class="pl-en">setOptions</span>(c);<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>];<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">0</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">randomize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][c]<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[b]<span class="pl-k">=</span>a[b]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]<span class="pl-k">=</span>c};</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">born</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">survive</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span>e<span class="pl-k">%</span><span class="pl-c1">2</span>);<span class="pl-k">for</span>(;g<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;g<span class="pl-k">+=</span>f){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[g][e],l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getNeighbors</span>(g,e);h<span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(l)<span class="pl-k">?</span>b[g][e]<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>h<span class="pl-k">||</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(l)<span class="pl-k">||</span>(b[g][e]<span class="pl-k">=</span><span class="pl-c1">1</span>)}}<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">connected</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">_completeMaze</span>();<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">6</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span>e<span class="pl-k">%</span><span class="pl-c1">2</span>);g<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;g<span class="pl-k">+=</span>f)<span class="pl-en">a</span>(g,e,b[g][e])};</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getNeighbors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[d],f<span class="pl-k">=</span>a<span class="pl-k">+</span>e[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>b<span class="pl-k">+</span>e[<span class="pl-c1">1</span>];<span class="pl-c1">0</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>f<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>e<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>(c<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[f][e]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)}<span class="pl-k">return</span> c};</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_completeMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-en">_freeSpace</span>(c,d)){<span class="pl-k">var</span> e<span class="pl-k">=</span>[c,d];b[<span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(e)]<span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>([c,d])}e<span class="pl-k">=</span>a[<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)];c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(e);a<span class="pl-k">=</span>{};a[c]<span class="pl-k">=</span>e;<span class="pl-k">delete</span> b[c];<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-en">_findConnected</span>(a,b,[e]);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">Object</span>.<span class="pl-en">keys</span>(b).<span class="pl-c1">length</span>;){e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getFromTo</span>(a,b);c<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];e<span class="pl-k">=</span>{};e[<span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(c)]<span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-en">_findConnected</span>(e,b,[c],<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-en">_tunnelToConnected</span>(d,c,a,b);<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> e)c<span class="pl-k">=</span>e[f],<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[c[<span class="pl-c1">0</span>]][c[<span class="pl-c1">1</span>]]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,a[f]<span class="pl-k">=</span>c,<span class="pl-k">delete</span> b[f]}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getFromTo</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c,d,e,f<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">keys</span>(a),g<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">keys</span>(b),h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">5</span><span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;!</span>(<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(c<span class="pl-k">=</span>f,d<span class="pl-k">=</span>a[c[<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)]],c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getClosest</span>(d,b))<span class="pl-k">:</span>(c<span class="pl-k">=</span>g,c<span class="pl-k">=</span>b[c[<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)]],d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getClosest</span>(c,a)),e<span class="pl-k">=</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">-</span>d[<span class="pl-c1">0</span>])<span class="pl-k">*</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">-</span>d[<span class="pl-c1">0</span>])<span class="pl-k">+</span>(c[<span class="pl-c1">1</span>]<span class="pl-k">-</span>d[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(c[<span class="pl-c1">1</span>]<span class="pl-k">-</span>d[<span class="pl-c1">1</span>]),<span class="pl-c1">64</span><span class="pl-k">&gt;</span>e);h<span class="pl-k">++</span>);<span class="pl-k">return</span>[c,d]};</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getClosest</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(k <span class="pl-k">in</span> b){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[k],f<span class="pl-k">=</span>(e[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>])<span class="pl-k">*</span>(e[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>])<span class="pl-k">+</span>(e[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(e[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">||</span>f<span class="pl-k">&lt;</span>d)d<span class="pl-k">=</span>f,c<span class="pl-k">=</span>e}<span class="pl-k">return</span> c};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_findConnected</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>[[e[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>,e[<span class="pl-c1">1</span>]],[e[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>,e[<span class="pl-c1">1</span>]],[e[<span class="pl-c1">0</span>],e[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>],[e[<span class="pl-c1">0</span>],e[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>]],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(e[f]);<span class="pl-c1">null</span><span class="pl-k">==</span>a[g]<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">_freeSpace</span>(e[f][<span class="pl-c1">0</span>],e[f][<span class="pl-c1">1</span>])<span class="pl-k">&amp;&amp;</span>(a[g]<span class="pl-k">=</span>e[f],d<span class="pl-k">||</span><span class="pl-k">delete</span> b[g],<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e[f]))}};</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tunnelToConnected</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(b);<span class="pl-k">var</span> e,f;b[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>a[<span class="pl-c1">0</span>]<span class="pl-k">?</span>(e<span class="pl-k">=</span>b,f<span class="pl-k">=</span>a)<span class="pl-k">:</span>(e<span class="pl-k">=</span>a,f<span class="pl-k">=</span>b);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];g<span class="pl-k">&lt;=</span>f[<span class="pl-c1">0</span>];g<span class="pl-k">++</span>){<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[g][e[<span class="pl-c1">1</span>]]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span>[g,e[<span class="pl-c1">1</span>]],l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(h);c[l]<span class="pl-k">=</span>h;<span class="pl-k">delete</span> d[l]}g<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];b[<span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>a[<span class="pl-c1">1</span>]<span class="pl-k">?</span>(e<span class="pl-k">=</span>b,f<span class="pl-k">=</span>a)<span class="pl-k">:</span>(e<span class="pl-k">=</span>a,f<span class="pl-k">=</span>b);<span class="pl-k">for</span>(a<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];a<span class="pl-k">&lt;</span>f[<span class="pl-c1">1</span>];a<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[g][a]<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span>[g,a],l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_pointKey</span>(h),c[l]<span class="pl-k">=</span>h,<span class="pl-k">delete</span> d[l]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_freeSpace</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]};</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_pointKey</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">1</span>]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Dungeon</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_corridors</span>};</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Digger</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{roomWidth<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">9</span>],roomHeight<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],corridorLength<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">10</span>],dugPercentage<span class="pl-k">:</span><span class="pl-c1">.2</span>,timeLimit<span class="pl-k">:</span><span class="pl-c1">1E3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> c)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[d]<span class="pl-k">=</span>c[d];<span class="pl-v">this</span>.<span class="pl-smi">_features</span><span class="pl-k">=</span>{Room<span class="pl-k">:</span><span class="pl-c1">4</span>,Corridor<span class="pl-k">:</span><span class="pl-c1">4</span>};<span class="pl-v">this</span>.<span class="pl-smi">_featureAttempts</span><span class="pl-k">=</span><span class="pl-c1">20</span>;<span class="pl-v">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_priorityWallCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_priorityWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>);</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(<span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">2</span>);<span class="pl-v">this</span>.<span class="pl-en">_firstRoom</span>();<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();<span class="pl-k">do</span>{<span class="pl-k">if</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>c<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">timeLimit</span>)<span class="pl-k">break</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_findWall</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">break</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(e[<span class="pl-c1">0</span>]),e<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(e[<span class="pl-c1">1</span>]),f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getDiggingDirection</span>(d,e);<span class="pl-k">if</span>(f){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">do</span> <span class="pl-k">if</span>(g<span class="pl-k">++</span>,<span class="pl-v">this</span>.<span class="pl-en">_tryFeature</span>(d,e,f[<span class="pl-c1">0</span>],f[<span class="pl-c1">1</span>])){<span class="pl-v">this</span>.<span class="pl-en">_removeSurroundingWalls</span>(d,e);<span class="pl-v">this</span>.<span class="pl-en">_removeSurroundingWalls</span>(d<span class="pl-k">-</span>f[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">-</span>f[<span class="pl-c1">1</span>]);<span class="pl-k">break</span>}<span class="pl-k">while</span>(g<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_featureAttempts</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,h;<span class="pl-k">for</span>(h <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_walls</span>)<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[h]<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">++</span>}}<span class="pl-k">while</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">/</span>b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">dugPercentage</span><span class="pl-k">||</span>g);<span class="pl-v">this</span>.<span class="pl-en">_addDoors</span>();<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>)<span class="pl-en">a</span>(b,c,<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][c]);<span class="pl-v">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_digCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">0</span><span class="pl-k">==</span>c<span class="pl-k">||</span><span class="pl-c1">2</span><span class="pl-k">==</span>c<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">++</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span><span class="pl-c1">1</span>};</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_priorityWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span><span class="pl-c1">2</span>};</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_firstRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandomCenter</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-v">this</span>.<span class="pl-smi">_options</span>);<span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(a);<span class="pl-smi">a</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_findWall</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span>[],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_walls</span>)<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[c]<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(c);a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>b<span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">random</span>();<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[c];<span class="pl-k">return</span> c};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tryFeature</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getWeightedValue</span>(<span class="pl-v">this</span>.<span class="pl-smi">_features</span>),e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>[e].<span class="pl-en">createRandomAt</span>(a,b,c,d,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-en">isValid</span>(<span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span>,<span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>);e <span class="pl-k">instanceof</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(e);e <span class="pl-k">instanceof</span> <span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-en">createPriorityWalls</span>(<span class="pl-v">this</span>.<span class="pl-smi">_priorityWallCallback</span>),<span class="pl-v">this</span>.<span class="pl-smi">_corridors</span>.<span class="pl-c1">push</span>(e));<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_removeSurroundingWalls</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>c[d],f<span class="pl-k">=</span>a<span class="pl-k">+</span>e[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>b<span class="pl-k">+</span>e[<span class="pl-c1">1</span>];<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g];f<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>e[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>e[<span class="pl-c1">1</span>];<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">_walls</span>[f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g]}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getDiggingDirection</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>b<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[e];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a<span class="pl-k">+</span>f[<span class="pl-c1">0</span>]][b<span class="pl-k">+</span>f[<span class="pl-c1">1</span>]]){<span class="pl-k">if</span>(c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;c<span class="pl-k">=</span>f}}<span class="pl-k">return</span> c<span class="pl-k">?</span>[<span class="pl-k">-</span>c[<span class="pl-c1">0</span>],<span class="pl-k">-</span>c[<span class="pl-c1">1</span>]]<span class="pl-k">:</span><span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_addDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>,<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">==</span>a[b][c]},c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>[c];<span class="pl-smi">d</span>.<span class="pl-en">clearDoors</span>();<span class="pl-smi">d</span>.<span class="pl-en">addDoors</span>(b)}};</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Uniform</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{roomWidth<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">9</span>],roomHeight<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],roomDugPercentage<span class="pl-k">:</span><span class="pl-c1">.1</span>,timeLimit<span class="pl-k">:</span><span class="pl-c1">1E3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> c)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[d]<span class="pl-k">=</span>c[d];<span class="pl-v">this</span>.<span class="pl-smi">_corridorAttempts</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_roomAttempts</span><span class="pl-k">=</span><span class="pl-c1">20</span>;<span class="pl-v">this</span>.<span class="pl-smi">_connected</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>);</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();;){<span class="pl-k">if</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>b<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">timeLimit</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-en">_generateRooms</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">2</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">_generateCorridors</span>())<span class="pl-k">break</span>}<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>)<span class="pl-en">a</span>(b,c,<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[b][c]);<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-k">do</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_generateRoom</span>();<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">/</span>(a<span class="pl-k">*</span>b)<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomDugPercentage</span>)<span class="pl-k">break</span>}<span class="pl-k">while</span>(c)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_roomAttempts</span>;){a<span class="pl-k">++</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandom</span>(<span class="pl-v">this</span>.<span class="pl-smi">_width</span>,<span class="pl-v">this</span>.<span class="pl-smi">_height</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-en">isValid</span>(<span class="pl-v">this</span>.<span class="pl-smi">_isWallCallback</span>,<span class="pl-v">this</span>.<span class="pl-smi">_canBeDugCallback</span>))<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>),<span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(b),b}<span class="pl-k">return</span> <span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_corridorAttempts</span>;){a<span class="pl-k">++</span>;<span class="pl-v">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>[b];<span class="pl-smi">c</span>.<span class="pl-en">clearDoors</span>();<span class="pl-smi">c</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>)}<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">slice</span>().<span class="pl-en">randomize</span>();<span class="pl-v">this</span>.<span class="pl-smi">_connected</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">pop</span>());;){b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-en">random</span>();b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_closestRoom</span>(<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>,b);c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_closestRoom</span>(<span class="pl-v">this</span>.<span class="pl-smi">_connected</span>,b);</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-en">_connectRooms</span>(b,c))<span class="pl-k">break</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_closestRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCenter</span>(),e<span class="pl-k">=</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>a[f],h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getCenter</span>(),l<span class="pl-k">=</span>h[<span class="pl-c1">0</span>]<span class="pl-k">-</span>d[<span class="pl-c1">0</span>],h<span class="pl-k">=</span>h[<span class="pl-c1">1</span>]<span class="pl-k">-</span>d[<span class="pl-c1">1</span>],l<span class="pl-k">=</span>l<span class="pl-k">*</span>l<span class="pl-k">+</span>h<span class="pl-k">*</span>h;l<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>l,e<span class="pl-k">=</span>g)}<span class="pl-k">return</span> e};</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCenter</span>(),d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCenter</span>(),e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">-</span>c[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[<span class="pl-c1">1</span>]<span class="pl-k">-</span>c[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e)<span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c))<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>c<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>(c<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span><span class="pl-c1">4</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getLeft</span>(),h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getRight</span>(),e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>,f<span class="pl-k">=</span>(c<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span><span class="pl-c1">4</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getTop</span>(),h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getBottom</span>(),e<span class="pl-k">=</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_placeInWall</span>(a,c);<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(c[e]<span class="pl-k">&gt;=</span>g<span class="pl-k">&amp;&amp;</span>c[e]<span class="pl-k">&lt;=</span>h){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(),d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">switch</span>(f){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getTop</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getRight</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>}l[(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-en">_digLine</span>([c,l])}<span class="pl-k">else</span> <span class="pl-k">if</span>(c[e]<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>c[e]<span class="pl-k">&gt;</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>){d<span class="pl-k">=</span>c[e]<span class="pl-k">-</span>d[e];<span class="pl-k">switch</span>(f){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>l<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>l<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>}l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_placeInWall</span>(b,(f<span class="pl-k">+</span>l)<span class="pl-k">%</span><span class="pl-c1">4</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>l)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];f[e]<span class="pl-k">=</span>c[e];d<span class="pl-k">=</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>;f[d]<span class="pl-k">=</span>l[d];<span class="pl-v">this</span>.<span class="pl-en">_digLine</span>([c,f,l])}<span class="pl-k">else</span>{d<span class="pl-k">=</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>;l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_placeInWall</span>(b,f);<span class="pl-k">if</span>(<span class="pl-k">!</span>l)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((l[d]<span class="pl-k">+</span>c[d])<span class="pl-k">/</span><span class="pl-c1">2</span>);g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];h<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];g[e]<span class="pl-k">=</span>c[e];g[d]<span class="pl-k">=</span>f;h[e]<span class="pl-k">=</span>l[e];h[d]<span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-en">_digLine</span>([c,g,h,l])}<span class="pl-smi">a</span>.<span class="pl-en">addDoor</span>(c[<span class="pl-c1">0</span>],c[<span class="pl-c1">1</span>]);<span class="pl-smi">b</span>.<span class="pl-en">addDoor</span>(l[<span class="pl-c1">0</span>],l[<span class="pl-c1">1</span>]);e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">splice</span>(e,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(a));e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">indexOf</span>(b);</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">splice</span>(e,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(b));<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_placeInWall</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>d<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>];c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>(),<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>];e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>];c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()];e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>d<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>];c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>(),<span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>];e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()],e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>e;h<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>c[<span class="pl-c1">0</span>]<span class="pl-k">+</span>h<span class="pl-k">*</span>d[<span class="pl-c1">0</span>],m<span class="pl-k">=</span>c[<span class="pl-c1">1</span>]<span class="pl-k">+</span>h<span class="pl-k">*</span>d[<span class="pl-c1">1</span>];<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>);<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[l][m]<span class="pl-k">?</span>g<span class="pl-k">!=</span>h<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(f[h]<span class="pl-k">=</span>[l,m])<span class="pl-k">:</span>(g<span class="pl-k">=</span>h)<span class="pl-k">&amp;&amp;</span>(f[h<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">null</span>)}<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h;h<span class="pl-k">--</span>)f[h]<span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">splice</span>(h,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">random</span>()<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_digLine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b<span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">=</span>a[b],c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ROT.Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">Corridor</span>(c[<span class="pl-c1">0</span>],c[<span class="pl-c1">1</span>],d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>]);<span class="pl-smi">c</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>.<span class="pl-smi">_digCallback</span>);<span class="pl-v">this</span>.<span class="pl-smi">_corridors</span>.<span class="pl-c1">push</span>(c)}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_digCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]<span class="pl-k">=</span>c;<span class="pl-c1">0</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">++</span>};</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_map</span>[a][b]};</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Rogue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{cellWidth<span class="pl-k">:</span><span class="pl-c1">3</span>,cellHeight<span class="pl-k">:</span><span class="pl-c1">3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> c)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[d]<span class="pl-k">=</span>c[d];<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>roomWidth<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomWidth</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_calculateRoomSize</span>(<span class="pl-v">this</span>.<span class="pl-smi">_width</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>));<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>roomHeight<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomHeight</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_calculateRoomSize</span>(<span class="pl-v">this</span>.<span class="pl-smi">_height</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>))};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>);</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">rooms</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">connectedCells</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-en">_initRooms</span>();<span class="pl-v">this</span>.<span class="pl-en">_connectRooms</span>();<span class="pl-v">this</span>.<span class="pl-en">_connectUnconnectedRooms</span>();<span class="pl-v">this</span>.<span class="pl-en">_createRandomRoomConnections</span>();<span class="pl-v">this</span>.<span class="pl-en">_createRooms</span>();<span class="pl-v">this</span>.<span class="pl-en">_createCorridors</span>();<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>)<span class="pl-en">a</span>(b,c,<span class="pl-v">this</span>.<span class="pl-smi">map</span>[b][c]);<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_calculateRoomSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>b<span class="pl-k">*</span><span class="pl-c1">.8</span>),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>b<span class="pl-k">*</span><span class="pl-c1">.25</span>);<span class="pl-c1">2</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-c1">2</span><span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-k">return</span>[d,c]};</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_initRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>;a<span class="pl-k">++</span>){<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[a].<span class="pl-c1">push</span>({x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>,connections<span class="pl-k">:</span>[],cellx<span class="pl-k">:</span>a,celly<span class="pl-k">:</span>b})}};</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span><span class="pl-k">-</span><span class="pl-c1">1</span>),b<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span><span class="pl-k">-</span><span class="pl-c1">1</span>),c,d,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,f;<span class="pl-k">do</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>],g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">randomize</span>();<span class="pl-k">do</span> <span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">pop</span>(),d<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][c][<span class="pl-c1">0</span>],c<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][c][<span class="pl-c1">1</span>],<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span>d<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>c<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>)){f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[a][b];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">connections</span>[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">connections</span>[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">==</span>c)<span class="pl-k">break</span>;f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[d][c];<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">f</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">push</span>([a,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">b]),<span class="pl-v">this</span>.<span class="pl-smi">connectedCells</span>.<span class="pl-c1">push</span>([d,c]),a<span class="pl-k">=</span>d,b<span class="pl-k">=</span>c,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e)}<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>)};</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectUnconnectedRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;<span class="pl-v">this</span>.<span class="pl-smi">connectedCells</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">connectedCells</span>.<span class="pl-en">randomize</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> c,d,e,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[f][g],<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>],h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">randomize</span>();e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">do</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">pop</span>(),m<span class="pl-k">=</span>f<span class="pl-k">+</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][l][<span class="pl-c1">0</span>],l<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][l][<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>m<span class="pl-k">||</span>m<span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>l<span class="pl-k">||</span>l<span class="pl-k">&gt;=</span>b)){d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[m][l];e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>)<span class="pl-k">break</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">connections</span>[m][<span class="pl-c1">0</span>]<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>[m][<span class="pl-c1">1</span>]<span class="pl-k">==</span>g){e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(e)<span class="pl-k">break</span>}}<span class="pl-k">while</span>(<span class="pl-smi">h</span>.<span class="pl-c1">length</span>);e<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">push</span>([<span class="pl-smi">d</span>.<span class="pl-smi">cellx</span>,<span class="pl-smi">d</span>.<span class="pl-smi">celly</span>])<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-- Unable to connect room.<span class="pl-pds">&quot;</span></span>)}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createRandomRoomConnections</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_width</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_height</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-smi">_width</span><span class="pl-k">/</span>c),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-smi">_height</span><span class="pl-k">/</span>d),g,h,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomWidth</span>,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomHeight</span>,p,q,n,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>c;r<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>d;t<span class="pl-k">++</span>){p<span class="pl-k">=</span>e<span class="pl-k">*</span>r;q<span class="pl-k">=</span>f<span class="pl-k">*</span>t;<span class="pl-c1">0</span><span class="pl-k">==</span>p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">0</span><span class="pl-k">==</span>q<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-c1">1</span>);g<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(l[<span class="pl-c1">0</span>],l[<span class="pl-c1">1</span>]);h<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(m[<span class="pl-c1">0</span>],m[<span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>t)<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r][t<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-c1">3</span><span class="pl-k">&gt;</span>q<span class="pl-k">-</span>(<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span>);)q<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>r)<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r<span class="pl-k">-</span><span class="pl-c1">1</span>][t];<span class="pl-c1">3</span><span class="pl-k">&gt;</span>p<span class="pl-k">-</span>(<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span>);)p<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,e<span class="pl-k">-</span>g)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,f<span class="pl-k">-</span>h)<span class="pl-k">/</span><span class="pl-c1">2</span>);p<span class="pl-k">+</span>n<span class="pl-k">+</span>g<span class="pl-k">&gt;=</span>a;)n<span class="pl-k">?</span>n<span class="pl-k">--</span><span class="pl-k">:</span>g<span class="pl-k">--</span>;<span class="pl-k">for</span>(;q<span class="pl-k">+</span>u<span class="pl-k">+</span>h<span class="pl-k">&gt;=</span>b;)u<span class="pl-k">?</span>u<span class="pl-k">--</span><span class="pl-k">:</span>h<span class="pl-k">--</span>;p<span class="pl-k">+=</span>n;q<span class="pl-k">+=</span>u;<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r][t].<span class="pl-c1">x</span><span class="pl-k">=</span>p;<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r][t].<span class="pl-c1">y</span><span class="pl-k">=</span>q;<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r][t].<span class="pl-c1">width</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[r][t].<span class="pl-c1">height</span><span class="pl-k">=</span>h;<span class="pl-k">for</span>(n<span class="pl-k">=</span>p;n<span class="pl-k">&lt;</span>p<span class="pl-k">+</span>g;n<span class="pl-k">++</span>)<span class="pl-k">for</span>(u<span class="pl-k">=</span>q;u<span class="pl-k">&lt;</span>q<span class="pl-k">+</span>h;u<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">map</span>[n][u]<span class="pl-k">=</span><span class="pl-c1">0</span>}};</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getWallPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-c1">3</span><span class="pl-k">==</span>b)c<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">2</span>),<span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">map</span>[c][e]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">==</span>b)d<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">2</span>),<span class="pl-c1">2</span><span class="pl-k">==</span>b<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">map</span>[e][d]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>[c,d]};</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawCorridore</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],g,h,l<span class="pl-k">=</span>[];h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d);g<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>();<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>g,c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>c<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">6</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>m<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(m<span class="pl-k">*</span>g),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,g]),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([c,h]),g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(m<span class="pl-k">*</span>p),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,g]))<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(h<span class="pl-k">*</span>g),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([c,g]),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,m]),g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(h<span class="pl-k">*</span>p),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([c,g]));<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">map</span>[e][f]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">pop</span>();<span class="pl-c1">0</span><span class="pl-k">&lt;</span>h[<span class="pl-c1">1</span>];)e<span class="pl-k">+=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][h[<span class="pl-c1">0</span>]][<span class="pl-c1">0</span>],f<span class="pl-k">+=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][h[<span class="pl-c1">0</span>]][<span class="pl-c1">1</span>],<span class="pl-v">this</span>.<span class="pl-smi">map</span>[e][f]<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-k">--</span>h[<span class="pl-c1">1</span>]};</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>,c,d,e,f,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>a;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>b;h<span class="pl-k">++</span>){c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[g][h];<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">connections</span>[l],d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rooms</span>[d[<span class="pl-c1">0</span>]][d[<span class="pl-c1">1</span>]],<span class="pl-smi">d</span>.<span class="pl-smi">cellx</span><span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-smi">cellx</span><span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span><span class="pl-c1">4</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">cellx</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">cellx</span><span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-c1">4</span>,f<span class="pl-k">=</span><span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">celly</span><span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-smi">celly</span><span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-c1">3</span>,f<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">celly</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">celly</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-c1">3</span>),<span class="pl-v">this</span>.<span class="pl-en">_drawCorridore</span>(<span class="pl-v">this</span>.<span class="pl-en">_getWallPosition</span>(c,e),<span class="pl-v">this</span>.<span class="pl-en">_getWallPosition</span>(d,f))}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Feature</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">createRandomAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">Room</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-v">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">=</span>{};<span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">addDoor</span>(e,f)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>);</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandomAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],h<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(f,g),f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(f,g);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>c)<span class="pl-k">return</span> c<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>e),<span class="pl-k">new</span> <span class="pl-en">this</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,c,a<span class="pl-k">+</span>h,c<span class="pl-k">+</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>,a,b);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>c)<span class="pl-k">return</span> c<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>e),<span class="pl-k">new</span> <span class="pl-en">this</span>(a<span class="pl-k">-</span>h,c,a<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>,a,b);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>h),<span class="pl-k">new</span> <span class="pl-en">this</span>(c,b<span class="pl-k">+</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">+</span>e,a,b);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>h),<span class="pl-k">new</span> <span class="pl-en">this</span>(c,</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">-</span>e,c<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>,a,b);<span class="pl-k">throw</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dx or dy must be 1 or -1<span class="pl-pds">&quot;</span></span>);};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandomCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],f<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(d,e),d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];c<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(d,e);a<span class="pl-k">-=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>f);b<span class="pl-k">-=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>c);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,b,a<span class="pl-k">+</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)};</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],f<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(d,e),d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];c<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(d,e);a<span class="pl-k">=</span>a<span class="pl-k">-</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>b<span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>a);b<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>b);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,b,a<span class="pl-k">+</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">addDoor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_doors</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_doors</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-en">a</span>(<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">0</span>]),<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">1</span>]))}<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clearDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">addDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>b;f<span class="pl-k">&lt;=</span>c;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>d;g<span class="pl-k">&lt;=</span>e;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(f<span class="pl-k">==</span>b<span class="pl-k">||</span>f<span class="pl-k">==</span>c<span class="pl-k">||</span>g<span class="pl-k">==</span>d<span class="pl-k">||</span>g<span class="pl-k">==</span>e)<span class="pl-en">a</span>(f,g)<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">addDoor</span>(f,g);<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>room<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_x1</span>,<span class="pl-v">this</span>.<span class="pl-smi">_y1</span>,<span class="pl-v">this</span>.<span class="pl-smi">_x2</span>,<span class="pl-v">this</span>.<span class="pl-smi">_y2</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>c;g<span class="pl-k">&lt;=</span>d;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>e;h<span class="pl-k">&lt;=</span>f;h<span class="pl-k">++</span>)<span class="pl-k">if</span>(g<span class="pl-k">==</span>c<span class="pl-k">||</span>g<span class="pl-k">==</span>d<span class="pl-k">||</span>h<span class="pl-k">==</span>e<span class="pl-k">||</span>h<span class="pl-k">==</span>f){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(g,h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">b</span>(g,h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>b;g<span class="pl-k">&lt;=</span>c;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>d;h<span class="pl-k">&lt;=</span>e;h<span class="pl-k">++</span>)f<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span>g<span class="pl-k">==</span>b<span class="pl-k">||</span>g<span class="pl-k">==</span>c<span class="pl-k">||</span>h<span class="pl-k">==</span>d<span class="pl-k">||</span>h<span class="pl-k">==</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">a</span>(g,h,f)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-v">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_x2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-v">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">_y2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>)]};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLeft</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_x1</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRight</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_x2</span>};</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTop</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_y1</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getBottom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">_y2</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">Corridor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-v">this</span>.<span class="pl-smi">_startX</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_startY</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>);<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-en">createRandomAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">e</span>.<span class="pl-smi">corridorLength</span>[<span class="pl-c1">0</span>],<span class="pl-smi">e</span>.<span class="pl-smi">corridorLength</span>[<span class="pl-c1">1</span>]);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,b,a<span class="pl-k">+</span>c<span class="pl-k">*</span>e,b<span class="pl-k">+</span>d<span class="pl-k">*</span>e)};</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>corridor<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_startX</span>,<span class="pl-v">this</span>.<span class="pl-smi">_startY</span>,<span class="pl-v">this</span>.<span class="pl-smi">_endX</span>,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span>)};</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_startX</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_startY</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>c,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>d,g<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f));e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e));f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f));<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>f,l<span class="pl-k">=</span><span class="pl-k">-</span>e,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span>g;p<span class="pl-k">++</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span>c<span class="pl-k">+</span>p<span class="pl-k">*</span>e,n<span class="pl-k">=</span>d<span class="pl-k">+</span>p<span class="pl-k">*</span>f;<span class="pl-en">b</span>(q,n)<span class="pl-k">||</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(q<span class="pl-k">+</span>h,n<span class="pl-k">+</span>l)<span class="pl-k">||</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(q<span class="pl-k">-</span>h,n<span class="pl-k">-</span>l)<span class="pl-k">||</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>m){g<span class="pl-k">=</span>p;<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">=</span>q<span class="pl-k">-</span>e;<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">=</span>n<span class="pl-k">-</span>f;<span class="pl-k">break</span>}}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>g<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>e,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>f))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>e<span class="pl-k">+</span>h,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>f<span class="pl-k">+</span>l);h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>e<span class="pl-k">-</span>h,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>f<span class="pl-k">-</span>l);<span class="pl-v">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">e,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>f);<span class="pl-k">return</span>(c<span class="pl-k">||</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_startX</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_startY</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>b,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>c,f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e));d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d));e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e));<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>f;g<span class="pl-k">++</span>)<span class="pl-en">a</span>(b<span class="pl-k">+</span>g<span class="pl-k">*</span>d,c<span class="pl-k">+</span>g<span class="pl-k">*</span>e,<span class="pl-c1">0</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">createPriorityWalls</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endsWithAWall</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_startX</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_startY</span>;b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b));c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c));<span class="pl-k">var</span> d<span class="pl-k">=</span>c,e<span class="pl-k">=</span><span class="pl-k">-</span>b;<span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>b,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>c);<span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>d,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>e);<span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>d,<span class="pl-v">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>e)}};<span class="pl-c1">ROT</span>.<span class="pl-en">Noise</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){};</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>.<span class="pl-en">Simplex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">_F2</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">_G2</span><span class="pl-k">=</span>(<span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">/</span><span class="pl-c1">6</span>;<span class="pl-v">this</span>.<span class="pl-smi">_gradients</span><span class="pl-k">=</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]];<span class="pl-k">var</span> b<span class="pl-k">=</span>[];a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">256</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">randomize</span>();<span class="pl-v">this</span>.<span class="pl-smi">_perms</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_indexes</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">*</span>a;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">_perms</span>.<span class="pl-c1">push</span>(b[c<span class="pl-k">%</span>a]),<span class="pl-v">this</span>.<span class="pl-smi">_indexes</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-smi">_perms</span>[c]<span class="pl-k">%</span><span class="pl-v">this</span>.<span class="pl-smi">_gradients</span>.<span class="pl-c1">length</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>.<span class="pl-smi">Simplex</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>);</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Noise</span>.<span class="pl-smi">Simplex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_perms</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_indexes</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_G2</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>,m,p<span class="pl-k">=</span>(a<span class="pl-k">+</span>b)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">_F2</span>,q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">+</span>p);m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">+</span>p);<span class="pl-k">var</span> p<span class="pl-k">=</span>(q<span class="pl-k">+</span>m)<span class="pl-k">*</span>f,n<span class="pl-k">=</span>a<span class="pl-k">-</span>(q<span class="pl-k">-</span>p),r<span class="pl-k">=</span>b<span class="pl-k">-</span>(m<span class="pl-k">-</span>p),t,u;n<span class="pl-k">&gt;</span>r<span class="pl-k">?</span>(t<span class="pl-k">=</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> w<span class="pl-k">=</span>n<span class="pl-k">-</span>t<span class="pl-k">+</span>f,x<span class="pl-k">=</span>r<span class="pl-k">-</span>u<span class="pl-k">+</span>f,p<span class="pl-k">=</span>n<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>f,f<span class="pl-k">=</span>r<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>f,q<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">mod</span>(e),e<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">mod</span>(e),v<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>n<span class="pl-k">*</span>n<span class="pl-k">-</span>r<span class="pl-k">*</span>r;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>v<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">*=</span>v,m<span class="pl-k">=</span>d[q<span class="pl-k">+</span>c[e]],m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_gradients</span>[m],g<span class="pl-k">=</span>v<span class="pl-k">*</span>v<span class="pl-k">*</span>(m[<span class="pl-c1">0</span>]<span class="pl-k">*</span>n<span class="pl-k">+</span>m[<span class="pl-c1">1</span>]<span class="pl-k">*</span>r));n<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>w<span class="pl-k">*</span>w<span class="pl-k">-</span>x<span class="pl-k">*</span>x;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>n<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">*=</span>n,m<span class="pl-k">=</span>d[q<span class="pl-k">+</span>t<span class="pl-k">+</span>c[e<span class="pl-k">+</span>u]],m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_gradients</span>[m],h<span class="pl-k">=</span>n<span class="pl-k">*</span>n<span class="pl-k">*</span>(m[<span class="pl-c1">0</span>]<span class="pl-k">*</span>w<span class="pl-k">+</span>m[<span class="pl-c1">1</span>]<span class="pl-k">*</span>x));n<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>p<span class="pl-k">*</span>p<span class="pl-k">-</span>f<span class="pl-k">*</span>f;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>n<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">*=</span>n,m<span class="pl-k">=</span>d[q<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span>c[e<span class="pl-k">+</span><span class="pl-c1">1</span>]],</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_gradients</span>[m],l<span class="pl-k">=</span>n<span class="pl-k">*</span>n<span class="pl-k">*</span>(m[<span class="pl-c1">0</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>m[<span class="pl-c1">1</span>]<span class="pl-k">*</span>f));<span class="pl-k">return</span> <span class="pl-c1">70</span><span class="pl-k">*</span>(g<span class="pl-k">+</span>h<span class="pl-k">+</span>l)};<span class="pl-c1">ROT</span>.<span class="pl-en">FOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_lightPasses</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{topology<span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> b)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[c]<span class="pl-k">=</span>b[c]};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){};</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getCircle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e,f,g;<span class="pl-k">switch</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>){<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>];e<span class="pl-k">=</span>[<span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">7</span>],<span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">1</span>],<span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">3</span>],<span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">5</span>]];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">6</span>];f<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],f<span class="pl-k">=</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>]}a<span class="pl-k">+=</span>g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>c;b<span class="pl-k">+=</span>g[<span class="pl-c1">1</span>]<span class="pl-k">*</span>c;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c<span class="pl-k">*</span>f;h<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>([a,b]),a<span class="pl-k">+=</span>e[g][<span class="pl-c1">0</span>],b<span class="pl-k">+=</span>e[g][<span class="pl-c1">1</span>];<span class="pl-k">return</span> d};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-en">DiscreteShadowcasting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>);</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">d</span>(a,b,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(a,b))<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f,g,h,l,m,p<span class="pl-k">=</span><span class="pl-c1">1</span>;p<span class="pl-k">&lt;=</span>c;p<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getCircle</span>(a,b,p),n<span class="pl-k">=</span><span class="pl-c1">360</span><span class="pl-k">/</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>q[r][<span class="pl-c1">0</span>],l<span class="pl-k">=</span>q[r][<span class="pl-c1">1</span>],f<span class="pl-k">=</span>n<span class="pl-k">*</span>(r<span class="pl-k">-</span><span class="pl-c1">.5</span>),g<span class="pl-k">=</span>f<span class="pl-k">+</span>n,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(h,l),<span class="pl-v">this</span>.<span class="pl-en">_visibleCoords</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(f),<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(g),m,e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(h,l,p,<span class="pl-c1">1</span>),<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">360</span><span class="pl-k">==</span>e[<span class="pl-c1">1</span>])<span class="pl-k">return</span>};</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_visibleCoords</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>a){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">callee</span>(<span class="pl-c1">0</span>,b,c,d),f<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">callee</span>(<span class="pl-c1">360</span><span class="pl-k">+</span>a,<span class="pl-c1">360</span>,c,d);<span class="pl-k">return</span> e<span class="pl-k">||</span>f}<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>d[e]<span class="pl-k">&lt;</span>a;)e<span class="pl-k">++</span>;<span class="pl-k">if</span>(e<span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(a,b),<span class="pl-k">!</span><span class="pl-c1">0</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(e<span class="pl-k">%</span><span class="pl-c1">2</span>){<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>d[e]<span class="pl-k">&lt;</span>b;)e<span class="pl-k">++</span>,f<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>f)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;c<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>f,f,b)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>f,f))}<span class="pl-k">else</span>{<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>d[e]<span class="pl-k">&lt;</span>b;)e<span class="pl-k">++</span>,f<span class="pl-k">++</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span>d[e<span class="pl-k">-</span>f]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">==</span>f)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;c<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>f,f,a)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>f,f,a,b))}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-en">PreciseShadowcasting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>);<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">d</span>(a,b,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(a,b))<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f,g,h,l,m,p<span class="pl-k">=</span><span class="pl-c1">1</span>;p<span class="pl-k">&lt;=</span>c;p<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getCircle</span>(a,b,p),n<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>n;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(f<span class="pl-k">=</span>q[r][<span class="pl-c1">0</span>],g<span class="pl-k">=</span>q[r][<span class="pl-c1">1</span>],l<span class="pl-k">=</span>[r<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">*</span>r<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>n<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>n],m<span class="pl-k">=</span>[<span class="pl-c1">2</span><span class="pl-k">*</span>r<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>n],h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(f,g),(h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_checkVisibility</span>(l,m,h,e))<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(f,g,p,h),<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>e[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">==</span>e[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>])<span class="pl-k">return</span>};</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_checkVisibility</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>b[<span class="pl-c1">0</span>])<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_checkVisibility</span>(a,[a[<span class="pl-c1">1</span>],a[<span class="pl-c1">1</span>]],c,d),b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_checkVisibility</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],b,c,d),(a<span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> g<span class="pl-k">=</span>d[e],g<span class="pl-k">=</span>g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>g[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g){<span class="pl-c1">0</span><span class="pl-k">!=</span>g<span class="pl-k">||</span>e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>}e<span class="pl-k">++</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;h<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>d[h],g<span class="pl-k">=</span>b[<span class="pl-c1">0</span>]<span class="pl-k">*</span>g[<span class="pl-c1">1</span>]<span class="pl-k">-</span>g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b[<span class="pl-c1">1</span>],<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g){<span class="pl-c1">0</span><span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>}g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">||</span>l)<span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>e<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>g)<span class="pl-k">return</span> <span class="pl-c1">0</span>;f<span class="pl-k">=</span>h<span class="pl-k">-</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(f<span class="pl-k">%</span><span class="pl-c1">2</span>)e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span>(h<span class="pl-k">=</span>d[e],h<span class="pl-k">=</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]<span class="pl-k">-</span>h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b[<span class="pl-c1">1</span>])<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">(h[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b[<span class="pl-c1">1</span>]),c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e,f,b))<span class="pl-k">:</span>(h<span class="pl-k">=</span>d[h],h<span class="pl-k">=</span>(h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]),c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e,f,a));<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">%</span><span class="pl-c1">2</span>)l<span class="pl-k">=</span>d[e],h<span class="pl-k">=</span>d[h],h<span class="pl-k">=</span>(h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>l[<span class="pl-c1">1</span>]<span class="pl-k">-</span>l[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(l[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]),c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e,f);<span class="pl-k">else</span> <span class="pl-k">return</span> c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(e,f,a,b),<span class="pl-c1">1</span>;<span class="pl-k">return</span> h<span class="pl-k">/</span>((b[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b[<span class="pl-c1">1</span>]))};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-en">RecursiveShadowcasting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>);<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span><span class="pl-k">=</span>[[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">d</span>(a,b,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[e],c,d)};</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute180</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">e</span>(a,b,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>,g<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[(d<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>],c,e);<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[f],c,e);<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[d],c,e);<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[g],c,e)};</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute90</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">e</span>(a,b,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[d],c,e);<span class="pl-v">this</span>.<span class="pl-en">_renderOctant</span>(a,b,<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[f],c,e)};<span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_renderOctant</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-v">this</span>.<span class="pl-en">_castVisibility</span>(a,b,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,d<span class="pl-k">+</span><span class="pl-c1">1</span>,c[<span class="pl-c1">0</span>],c[<span class="pl-c1">1</span>],c[<span class="pl-c1">2</span>],c[<span class="pl-c1">3</span>],e)};</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_castVisibility</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>,<span class="pl-smi">m</span>,<span class="pl-smi">p</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(d<span class="pl-k">&lt;</span>e))<span class="pl-k">for</span>(;c<span class="pl-k">&lt;=</span>f;c<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span><span class="pl-k">-</span>c,r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>q;){<span class="pl-k">var</span> q<span class="pl-k">=</span>q<span class="pl-k">+</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span>a<span class="pl-k">+</span>q<span class="pl-k">*</span>g<span class="pl-k">+</span>n<span class="pl-k">*</span>h,w<span class="pl-k">=</span>b<span class="pl-k">+</span>q<span class="pl-k">*</span>l<span class="pl-k">+</span>n<span class="pl-k">*</span>m,x<span class="pl-k">=</span>(q<span class="pl-k">-</span><span class="pl-c1">.5</span>)<span class="pl-k">/</span>(n<span class="pl-k">+</span><span class="pl-c1">.5</span>),v<span class="pl-k">=</span>(q<span class="pl-k">+</span><span class="pl-c1">.5</span>)<span class="pl-k">/</span>(n<span class="pl-k">-</span><span class="pl-c1">.5</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>(v<span class="pl-k">&gt;</span>d)){<span class="pl-k">if</span>(x<span class="pl-k">&lt;</span>e)<span class="pl-k">break</span>;q<span class="pl-k">*</span>q<span class="pl-k">+</span>n<span class="pl-k">*</span>n<span class="pl-k">&lt;</span>f<span class="pl-k">*</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-en">p</span>(u,w,c,<span class="pl-c1">1</span>);r<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(u,w)<span class="pl-k">?</span>(r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span>t)<span class="pl-k">:</span>t<span class="pl-k">=</span>v<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-en">_lightPasses</span>(u,w)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-en">_castVisibility</span>(a,b,c<span class="pl-k">+</span><span class="pl-c1">1</span>,d,x,f,g,h,l,m,p),t<span class="pl-k">=</span>v)}}<span class="pl-k">if</span>(r)<span class="pl-k">break</span>}};</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Color</span><span class="pl-k">=</span>{<span class="pl-en">fromString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">if</span>(a <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_cache</span>)b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_cache</span>[a];<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>))<span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">0-9a-f</span>]</span><span class="pl-pds">/</span>gi</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(a,<span class="pl-c1">16</span>)}),<span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">17</span><span class="pl-k">*</span>a});<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)b[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+=</span><span class="pl-c1">16</span><span class="pl-k">*</span>b[c],<span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-k">else</span> b<span class="pl-k">=</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>, ]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>i</span>))<span class="pl-k">?</span>c[<span class="pl-c1">1</span>].<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>).<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(a)})<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-v">this</span>.<span class="pl-smi">_cache</span>[a]<span class="pl-k">=</span>b}<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">slice</span>()},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)c[d]<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-v">arguments</span>[e][d];<span class="pl-k">return</span> c},<span class="pl-en">add_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)a[c]<span class="pl-k">+=</span><span class="pl-v">arguments</span>[d][c];<span class="pl-k">return</span> a},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)c[d]<span class="pl-k">*=</span><span class="pl-v">arguments</span>[e][d]<span class="pl-k">/</span><span class="pl-c1">255</span>;c[d]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(c[d])}<span class="pl-k">return</span> c},<span class="pl-en">multiply_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)a[c]<span class="pl-k">*=</span><span class="pl-v">arguments</span>[d][c]<span class="pl-k">/</span><span class="pl-c1">255</span>;a[c]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a[c])}<span class="pl-k">return</span> a},<span class="pl-en">interpolate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">3</span><span class="pl-k">&gt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">.5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)d[e]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(d[e]<span class="pl-k">+</span>c<span class="pl-k">*</span>(b[e]<span class="pl-k">-</span>a[e]));<span class="pl-k">return</span> d},<span class="pl-en">interpolateHSL</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">3</span><span class="pl-k">&gt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">.5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">rgb2hsl</span>(a),e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">rgb2hsl</span>(b),f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>)d[f]<span class="pl-k">+=</span>c<span class="pl-k">*</span>(e[f]<span class="pl-k">-</span>d[f]);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">hsl2rgb</span>(d)},<span class="pl-en">randomize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span><span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getNormal</span>(<span class="pl-c1">0</span>,b)));<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)c[d]<span class="pl-k">+=</span>b <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">ROT</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getNormal</span>(<span class="pl-c1">0</span>,b[d]))<span class="pl-k">:</span>b;<span class="pl-k">return</span> c},<span class="pl-en">rgb2hsl</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>,c<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>;a<span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,c,a),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c,a),f,g<span class="pl-k">=</span>(d<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(d<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">e)f<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> h<span class="pl-k">=</span>d<span class="pl-k">-</span>e,e<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&lt;</span>g<span class="pl-k">?</span>h<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">-</span>d<span class="pl-k">-</span>e)<span class="pl-k">:</span>h<span class="pl-k">/</span>(d<span class="pl-k">+</span>e);<span class="pl-k">switch</span>(d){<span class="pl-k">case</span> b<span class="pl-k">:</span>f<span class="pl-k">=</span>(c<span class="pl-k">-</span>a)<span class="pl-k">/</span>h<span class="pl-k">+</span>(c<span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> c<span class="pl-k">:</span>f<span class="pl-k">=</span>(a<span class="pl-k">-</span>b)<span class="pl-k">/</span>h<span class="pl-k">+</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> a<span class="pl-k">:</span>f<span class="pl-k">=</span>(b<span class="pl-k">-</span>c)<span class="pl-k">/</span>h<span class="pl-k">+</span><span class="pl-c1">4</span>}f<span class="pl-k">/=</span><span class="pl-c1">6</span>}<span class="pl-k">return</span>[f,e,g]},<span class="pl-en">hsl2rgb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>a[<span class="pl-c1">1</span>])<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>b),[b,b,b];<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-c1">1</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-k">--</span>c;<span class="pl-k">return</span> c<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">6</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">6</span><span class="pl-k">*</span>(b<span class="pl-k">-</span>a)<span class="pl-k">*</span>c<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span>b<span class="pl-k">:</span>c<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">?</span>a<span class="pl-k">+</span>(b<span class="pl-k">-</span>a)<span class="pl-k">*</span>(<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span>c)<span class="pl-k">*</span><span class="pl-c1">6</span><span class="pl-k">:</span>a},d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>b<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>d)<span class="pl-k">:</span>b<span class="pl-k">+</span>d<span class="pl-k">-</span>b<span class="pl-k">*</span>d,e<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>b<span class="pl-k">-</span>d,b<span class="pl-k">=</span><span class="pl-en">c</span>(e,d,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>),f<span class="pl-k">=</span><span class="pl-en">c</span>(e,d,a[<span class="pl-c1">0</span>]);a<span class="pl-k">=</span><span class="pl-en">c</span>(e,d,a[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>);<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>b),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>f),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>a)]},<span class="pl-en">toRGB</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">0</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">2</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>},<span class="pl-en">toHex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-en">_clamp</span>(a[c]).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-en">lpad</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">2</span>));<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">_clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">255</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span>a},_cache<span class="pl-k">:</span>{black<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],navy<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">128</span>],darkblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">139</span>],mediumblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">205</span>],blue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],darkgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">100</span>,<span class="pl-c1">0</span>],green<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">128</span>,<span class="pl-c1">0</span>],teal<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],darkcyan<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">139</span>,<span class="pl-c1">139</span>],deepskyblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">191</span>,<span class="pl-c1">255</span>],darkturquoise<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">206</span>,<span class="pl-c1">209</span>],mediumspringgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">250</span>,<span class="pl-c1">154</span>],lime<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],springgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">255</span>,<span class="pl-c1">127</span>],aqua<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],cyan<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],midnightblue<span class="pl-k">:</span>[<span class="pl-c1">25</span>,<span class="pl-c1">25</span>,<span class="pl-c1">112</span>],dodgerblue<span class="pl-k">:</span>[<span class="pl-c1">30</span>,<span class="pl-c1">144</span>,<span class="pl-c1">255</span>],forestgreen<span class="pl-k">:</span>[<span class="pl-c1">34</span>,<span class="pl-c1">139</span>,<span class="pl-c1">34</span>],seagreen<span class="pl-k">:</span>[<span class="pl-c1">46</span>,<span class="pl-c1">139</span>,<span class="pl-c1">87</span>],darkslategray<span class="pl-k">:</span>[<span class="pl-c1">47</span>,<span class="pl-c1">79</span>,<span class="pl-c1">79</span>],darkslategrey<span class="pl-k">:</span>[<span class="pl-c1">47</span>,<span class="pl-c1">79</span>,<span class="pl-c1">79</span>],limegreen<span class="pl-k">:</span>[<span class="pl-c1">50</span>,<span class="pl-c1">205</span>,<span class="pl-c1">50</span>],mediumseagreen<span class="pl-k">:</span>[<span class="pl-c1">60</span>,<span class="pl-c1">179</span>,<span class="pl-c1">113</span>],turquoise<span class="pl-k">:</span>[<span class="pl-c1">64</span>,<span class="pl-c1">224</span>,<span class="pl-c1">208</span>],royalblue<span class="pl-k">:</span>[<span class="pl-c1">65</span>,<span class="pl-c1">105</span>,<span class="pl-c1">225</span>],steelblue<span class="pl-k">:</span>[<span class="pl-c1">70</span>,<span class="pl-c1">130</span>,<span class="pl-c1">180</span>],darkslateblue<span class="pl-k">:</span>[<span class="pl-c1">72</span>,<span class="pl-c1">61</span>,<span class="pl-c1">139</span>],mediumturquoise<span class="pl-k">:</span>[<span class="pl-c1">72</span>,<span class="pl-c1">209</span>,<span class="pl-c1">204</span>],indigo<span class="pl-k">:</span>[<span class="pl-c1">75</span>,<span class="pl-c1">0</span>,<span class="pl-c1">130</span>],darkolivegreen<span class="pl-k">:</span>[<span class="pl-c1">85</span>,<span class="pl-c1">107</span>,<span class="pl-c1">47</span>],cadetblue<span class="pl-k">:</span>[<span class="pl-c1">95</span>,<span class="pl-c1">158</span>,<span class="pl-c1">160</span>],cornflowerblue<span class="pl-k">:</span>[<span class="pl-c1">100</span>,<span class="pl-c1">149</span>,<span class="pl-c1">237</span>],mediumaquamarine<span class="pl-k">:</span>[<span class="pl-c1">102</span>,<span class="pl-c1">205</span>,<span class="pl-c1">170</span>],dimgray<span class="pl-k">:</span>[<span class="pl-c1">105</span>,</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">105</span>,<span class="pl-c1">105</span>],dimgrey<span class="pl-k">:</span>[<span class="pl-c1">105</span>,<span class="pl-c1">105</span>,<span class="pl-c1">105</span>],slateblue<span class="pl-k">:</span>[<span class="pl-c1">106</span>,<span class="pl-c1">90</span>,<span class="pl-c1">205</span>],olivedrab<span class="pl-k">:</span>[<span class="pl-c1">107</span>,<span class="pl-c1">142</span>,<span class="pl-c1">35</span>],slategray<span class="pl-k">:</span>[<span class="pl-c1">112</span>,<span class="pl-c1">128</span>,<span class="pl-c1">144</span>],slategrey<span class="pl-k">:</span>[<span class="pl-c1">112</span>,<span class="pl-c1">128</span>,<span class="pl-c1">144</span>],lightslategray<span class="pl-k">:</span>[<span class="pl-c1">119</span>,<span class="pl-c1">136</span>,<span class="pl-c1">153</span>],lightslategrey<span class="pl-k">:</span>[<span class="pl-c1">119</span>,<span class="pl-c1">136</span>,<span class="pl-c1">153</span>],mediumslateblue<span class="pl-k">:</span>[<span class="pl-c1">123</span>,<span class="pl-c1">104</span>,<span class="pl-c1">238</span>],lawngreen<span class="pl-k">:</span>[<span class="pl-c1">124</span>,<span class="pl-c1">252</span>,<span class="pl-c1">0</span>],chartreuse<span class="pl-k">:</span>[<span class="pl-c1">127</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],aquamarine<span class="pl-k">:</span>[<span class="pl-c1">127</span>,<span class="pl-c1">255</span>,<span class="pl-c1">212</span>],maroon<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],purple<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">0</span>,<span class="pl-c1">128</span>],olive<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">0</span>],gray<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],grey<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],skyblue<span class="pl-k">:</span>[<span class="pl-c1">135</span>,<span class="pl-c1">206</span>,<span class="pl-c1">235</span>],lightskyblue<span class="pl-k">:</span>[<span class="pl-c1">135</span>,<span class="pl-c1">206</span>,<span class="pl-c1">250</span>],blueviolet<span class="pl-k">:</span>[<span class="pl-c1">138</span>,<span class="pl-c1">43</span>,<span class="pl-c1">226</span>],darkred<span class="pl-k">:</span>[<span class="pl-c1">139</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],darkmagenta<span class="pl-k">:</span>[<span class="pl-c1">139</span>,<span class="pl-c1">0</span>,<span class="pl-c1">139</span>],saddlebrown<span class="pl-k">:</span>[<span class="pl-c1">139</span>,</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">69</span>,<span class="pl-c1">19</span>],darkseagreen<span class="pl-k">:</span>[<span class="pl-c1">143</span>,<span class="pl-c1">188</span>,<span class="pl-c1">143</span>],lightgreen<span class="pl-k">:</span>[<span class="pl-c1">144</span>,<span class="pl-c1">238</span>,<span class="pl-c1">144</span>],mediumpurple<span class="pl-k">:</span>[<span class="pl-c1">147</span>,<span class="pl-c1">112</span>,<span class="pl-c1">216</span>],darkviolet<span class="pl-k">:</span>[<span class="pl-c1">148</span>,<span class="pl-c1">0</span>,<span class="pl-c1">211</span>],palegreen<span class="pl-k">:</span>[<span class="pl-c1">152</span>,<span class="pl-c1">251</span>,<span class="pl-c1">152</span>],darkorchid<span class="pl-k">:</span>[<span class="pl-c1">153</span>,<span class="pl-c1">50</span>,<span class="pl-c1">204</span>],yellowgreen<span class="pl-k">:</span>[<span class="pl-c1">154</span>,<span class="pl-c1">205</span>,<span class="pl-c1">50</span>],sienna<span class="pl-k">:</span>[<span class="pl-c1">160</span>,<span class="pl-c1">82</span>,<span class="pl-c1">45</span>],brown<span class="pl-k">:</span>[<span class="pl-c1">165</span>,<span class="pl-c1">42</span>,<span class="pl-c1">42</span>],darkgray<span class="pl-k">:</span>[<span class="pl-c1">169</span>,<span class="pl-c1">169</span>,<span class="pl-c1">169</span>],darkgrey<span class="pl-k">:</span>[<span class="pl-c1">169</span>,<span class="pl-c1">169</span>,<span class="pl-c1">169</span>],lightblue<span class="pl-k">:</span>[<span class="pl-c1">173</span>,<span class="pl-c1">216</span>,<span class="pl-c1">230</span>],greenyellow<span class="pl-k">:</span>[<span class="pl-c1">173</span>,<span class="pl-c1">255</span>,<span class="pl-c1">47</span>],paleturquoise<span class="pl-k">:</span>[<span class="pl-c1">175</span>,<span class="pl-c1">238</span>,<span class="pl-c1">238</span>],lightsteelblue<span class="pl-k">:</span>[<span class="pl-c1">176</span>,<span class="pl-c1">196</span>,<span class="pl-c1">222</span>],powderblue<span class="pl-k">:</span>[<span class="pl-c1">176</span>,<span class="pl-c1">224</span>,<span class="pl-c1">230</span>],firebrick<span class="pl-k">:</span>[<span class="pl-c1">178</span>,<span class="pl-c1">34</span>,<span class="pl-c1">34</span>],darkgoldenrod<span class="pl-k">:</span>[<span class="pl-c1">184</span>,<span class="pl-c1">134</span>,<span class="pl-c1">11</span>],mediumorchid<span class="pl-k">:</span>[<span class="pl-c1">186</span>,<span class="pl-c1">85</span>,<span class="pl-c1">211</span>],rosybrown<span class="pl-k">:</span>[<span class="pl-c1">188</span>,<span class="pl-c1">143</span>,<span class="pl-c1">143</span>],darkkhaki<span class="pl-k">:</span>[<span class="pl-c1">189</span>,</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">183</span>,<span class="pl-c1">107</span>],silver<span class="pl-k">:</span>[<span class="pl-c1">192</span>,<span class="pl-c1">192</span>,<span class="pl-c1">192</span>],mediumvioletred<span class="pl-k">:</span>[<span class="pl-c1">199</span>,<span class="pl-c1">21</span>,<span class="pl-c1">133</span>],indianred<span class="pl-k">:</span>[<span class="pl-c1">205</span>,<span class="pl-c1">92</span>,<span class="pl-c1">92</span>],peru<span class="pl-k">:</span>[<span class="pl-c1">205</span>,<span class="pl-c1">133</span>,<span class="pl-c1">63</span>],chocolate<span class="pl-k">:</span>[<span class="pl-c1">210</span>,<span class="pl-c1">105</span>,<span class="pl-c1">30</span>],tan<span class="pl-k">:</span>[<span class="pl-c1">210</span>,<span class="pl-c1">180</span>,<span class="pl-c1">140</span>],lightgray<span class="pl-k">:</span>[<span class="pl-c1">211</span>,<span class="pl-c1">211</span>,<span class="pl-c1">211</span>],lightgrey<span class="pl-k">:</span>[<span class="pl-c1">211</span>,<span class="pl-c1">211</span>,<span class="pl-c1">211</span>],palevioletred<span class="pl-k">:</span>[<span class="pl-c1">216</span>,<span class="pl-c1">112</span>,<span class="pl-c1">147</span>],thistle<span class="pl-k">:</span>[<span class="pl-c1">216</span>,<span class="pl-c1">191</span>,<span class="pl-c1">216</span>],orchid<span class="pl-k">:</span>[<span class="pl-c1">218</span>,<span class="pl-c1">112</span>,<span class="pl-c1">214</span>],goldenrod<span class="pl-k">:</span>[<span class="pl-c1">218</span>,<span class="pl-c1">165</span>,<span class="pl-c1">32</span>],crimson<span class="pl-k">:</span>[<span class="pl-c1">220</span>,<span class="pl-c1">20</span>,<span class="pl-c1">60</span>],gainsboro<span class="pl-k">:</span>[<span class="pl-c1">220</span>,<span class="pl-c1">220</span>,<span class="pl-c1">220</span>],plum<span class="pl-k">:</span>[<span class="pl-c1">221</span>,<span class="pl-c1">160</span>,<span class="pl-c1">221</span>],burlywood<span class="pl-k">:</span>[<span class="pl-c1">222</span>,<span class="pl-c1">184</span>,<span class="pl-c1">135</span>],lightcyan<span class="pl-k">:</span>[<span class="pl-c1">224</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],lavender<span class="pl-k">:</span>[<span class="pl-c1">230</span>,<span class="pl-c1">230</span>,<span class="pl-c1">250</span>],darksalmon<span class="pl-k">:</span>[<span class="pl-c1">233</span>,<span class="pl-c1">150</span>,<span class="pl-c1">122</span>],violet<span class="pl-k">:</span>[<span class="pl-c1">238</span>,<span class="pl-c1">130</span>,<span class="pl-c1">238</span>],palegoldenrod<span class="pl-k">:</span>[<span class="pl-c1">238</span>,<span class="pl-c1">232</span>,<span class="pl-c1">170</span>],lightcoral<span class="pl-k">:</span>[<span class="pl-c1">240</span>,</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">128</span>,<span class="pl-c1">128</span>],khaki<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">230</span>,<span class="pl-c1">140</span>],aliceblue<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">248</span>,<span class="pl-c1">255</span>],honeydew<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">255</span>,<span class="pl-c1">240</span>],azure<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],sandybrown<span class="pl-k">:</span>[<span class="pl-c1">244</span>,<span class="pl-c1">164</span>,<span class="pl-c1">96</span>],wheat<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">222</span>,<span class="pl-c1">179</span>],beige<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">245</span>,<span class="pl-c1">220</span>],whitesmoke<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">245</span>,<span class="pl-c1">245</span>],mintcream<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">255</span>,<span class="pl-c1">250</span>],ghostwhite<span class="pl-k">:</span>[<span class="pl-c1">248</span>,<span class="pl-c1">248</span>,<span class="pl-c1">255</span>],salmon<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">128</span>,<span class="pl-c1">114</span>],antiquewhite<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">235</span>,<span class="pl-c1">215</span>],linen<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">240</span>,<span class="pl-c1">230</span>],lightgoldenrodyellow<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">250</span>,<span class="pl-c1">210</span>],oldlace<span class="pl-k">:</span>[<span class="pl-c1">253</span>,<span class="pl-c1">245</span>,<span class="pl-c1">230</span>],red<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],fuchsia<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],magenta<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],deeppink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">20</span>,<span class="pl-c1">147</span>],orangered<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">69</span>,<span class="pl-c1">0</span>],tomato<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">99</span>,<span class="pl-c1">71</span>],hotpink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">105</span>,<span class="pl-c1">180</span>],coral<span class="pl-k">:</span>[<span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">127</span>,<span class="pl-c1">80</span>],darkorange<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">140</span>,<span class="pl-c1">0</span>],lightsalmon<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">160</span>,<span class="pl-c1">122</span>],orange<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">165</span>,<span class="pl-c1">0</span>],lightpink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">182</span>,<span class="pl-c1">193</span>],pink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">192</span>,<span class="pl-c1">203</span>],gold<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">215</span>,<span class="pl-c1">0</span>],peachpuff<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">218</span>,<span class="pl-c1">185</span>],navajowhite<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">222</span>,<span class="pl-c1">173</span>],moccasin<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">228</span>,<span class="pl-c1">181</span>],bisque<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">228</span>,<span class="pl-c1">196</span>],mistyrose<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">228</span>,<span class="pl-c1">225</span>],blanchedalmond<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">235</span>,<span class="pl-c1">205</span>],papayawhip<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">239</span>,<span class="pl-c1">213</span>],lavenderblush<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">240</span>,<span class="pl-c1">245</span>],seashell<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">245</span>,<span class="pl-c1">238</span>],cornsilk<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">248</span>,<span class="pl-c1">220</span>],lemonchiffon<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">205</span>],floralwhite<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">240</span>],snow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">250</span>],yellow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],lightyellow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">224</span>],ivory<span class="pl-k">:</span>[<span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">255</span>,<span class="pl-c1">240</span>],white<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>]}};<span class="pl-c1">ROT</span>.<span class="pl-en">Lighting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCallback</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{passes<span class="pl-k">:</span><span class="pl-c1">1</span>,emissionThreshold<span class="pl-k">:</span><span class="pl-c1">100</span>,range<span class="pl-k">:</span><span class="pl-c1">10</span>};<span class="pl-v">this</span>.<span class="pl-smi">_fov</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.<span class="pl-smi">_lights</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-en">setOptions</span>(b)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[b]<span class="pl-k">=</span>a[b];a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">range</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-c1">reset</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setFOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">_fov</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setLight</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;c<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">_lights</span>[a]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span><span class="pl-c1">ROT</span>.<span class="pl-smi">Color</span>.<span class="pl-en">fromString</span>(c)<span class="pl-k">:</span>c<span class="pl-k">:</span><span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">_lights</span>[a];<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clearLights</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_lights</span><span class="pl-k">=</span>{}};<span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c<span class="pl-k">=</span>{},d<span class="pl-k">=</span>{},e;<span class="pl-k">for</span>(e <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_lights</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_lights</span>[e];c[e]<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-c1">ROT</span>.<span class="pl-smi">Color</span>.<span class="pl-en">add_</span>(c[e],f)}<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">passes</span>;e<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-en">_emitLight</span>(c,d,b),e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">passes</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_computeEmitters</span>(d,b));<span class="pl-k">for</span>(<span class="pl-k">var</span> g <span class="pl-k">in</span> d)c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">0</span>]),c<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">1</span>]),<span class="pl-en">a</span>(b,c,d[g]);<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_emitLight</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> a){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(e[<span class="pl-c1">0</span>]),e<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(e[<span class="pl-c1">1</span>]);<span class="pl-v">this</span>.<span class="pl-en">_emitLightFromCell</span>(f,e,a[d],b);c[d]<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> <span class="pl-v">this</span>};</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_computeEmitters</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{},d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">!</span>(d <span class="pl-k">in</span> b)){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[d];<span class="pl-k">if</span>(d <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCache</span>)<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCache</span>[d];<span class="pl-k">else</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">0</span>]),g<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">1</span>]),f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_reflectivityCallback</span>(f,g);<span class="pl-v">this</span>.<span class="pl-smi">_reflectivityCache</span>[d]<span class="pl-k">=</span>f}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!=</span>f){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>l;l<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(e[l]<span class="pl-k">*</span>f);g[l]<span class="pl-k">=</span>m;h<span class="pl-k">+=</span>m}h<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">emissionThreshold</span><span class="pl-k">&amp;&amp;</span>(c[d]<span class="pl-k">=</span>g)}}<span class="pl-k">return</span> c};</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_emitLightFromCell</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;a<span class="pl-k">=</span>e <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span>[e]<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">_updateFOV</span>(a,b);<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> a){b<span class="pl-k">=</span>a[f];f <span class="pl-k">in</span> d<span class="pl-k">?</span>e<span class="pl-k">=</span>d[f]<span class="pl-k">:</span>(e<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],d[f]<span class="pl-k">=</span>e);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)e[g]<span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(c[g]<span class="pl-k">*</span>b)}<span class="pl-k">return</span> <span class="pl-v">this</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_updateFOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_fovCache</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span>c;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">range</span>;<span class="pl-v">this</span>.<span class="pl-smi">_fov</span>.<span class="pl-en">compute</span>(a,b,d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){g<span class="pl-k">=</span>h<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>g<span class="pl-k">/</span>d);<span class="pl-c1">0</span><span class="pl-k">!=</span>g<span class="pl-k">&amp;&amp;</span>(c[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span>g)}.<span class="pl-en">bind</span>(<span class="pl-v">this</span>));<span class="pl-k">return</span> c};</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-en">Path</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-v">this</span>.<span class="pl-smi">_toX</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_toY</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.<span class="pl-smi">_passableCallback</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{topology<span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)<span class="pl-v">this</span>.<span class="pl-smi">_options</span>[e]<span class="pl-k">=</span>d[e];<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span><span class="pl-c1">ROT</span>.<span class="pl-c1">DIRS</span>[<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>];<span class="pl-c1">8</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">0</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">2</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">4</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">6</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">1</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">3</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">5</span>],<span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">7</span>]])};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){};</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getNeighbors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_dirs</span>[d],f<span class="pl-k">=</span>a<span class="pl-k">+</span>e[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>b<span class="pl-k">+</span>e[<span class="pl-c1">1</span>];<span class="pl-v">this</span>.<span class="pl-en">_passableCallback</span>(f,e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>([f,e])}<span class="pl-k">return</span> c};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-en">Dijkstra</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b,c,d);<span class="pl-v">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-en">_add</span>(a,b,<span class="pl-c1">null</span>)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>);</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;d <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">_compute</span>(a,b);<span class="pl-k">if</span>(d <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_computed</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_computed</span>[d];a;)<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">prev</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(;<span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">shift</span>();<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">==</span>b)<span class="pl-k">break</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getNeighbors</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[e],g<span class="pl-k">=</span>f[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">_add</span>(g,f,c)}}};</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,prev<span class="pl-k">:</span>c};<span class="pl-v">this</span>.<span class="pl-smi">_computed</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">push</span>(c)};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-en">AStar</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b,c,d);<span class="pl-v">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_done</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-en">extend</span>(<span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>);</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">_done</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-en">_add</span>(<span class="pl-v">this</span>.<span class="pl-smi">_toX</span>,<span class="pl-v">this</span>.<span class="pl-smi">_toY</span>,<span class="pl-c1">null</span>);<span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">shift</span>();<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">==</span>b)<span class="pl-k">break</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">_getNeighbors</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>e[f],h<span class="pl-k">=</span>g[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">_done</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">_add</span>(h,g,d)}}<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_done</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b])<span class="pl-k">for</span>(;d;)<span class="pl-en">c</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">prev</span>};</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,prev<span class="pl-k">:</span>c,g<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,h<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">_distance</span>(a,b)};<span class="pl-v">this</span>.<span class="pl-smi">_done</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]<span class="pl-k">=</span>c;a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">h</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">_todo</span>[b];<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">h</span>){<span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">0</span>,c);<span class="pl-k">return</span>}}<span class="pl-v">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">push</span>(c)};</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ROT</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_distance</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(<span class="pl-v">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>){<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromX</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromY</span>);<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromX</span>),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromY</span>);<span class="pl-k">return</span> d<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,(c<span class="pl-k">-</span>d)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">_fromY</span>))}<span class="pl-k">throw</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Illegal topology<span class="pl-pds">&quot;</span></span>);};</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="hidden">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop"></div>
</div>


    </div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z"></path></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2016 <span title="0.04437s from github-fe151-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M15.72 12.5l-6.85-11.98C8.69 0.21 8.36 0.02 8 0.02s-0.69 0.19-0.87 0.5l-6.85 11.98c-0.18 0.31-0.18 0.69 0 1C0.47 13.81 0.8 14 1.15 14h13.7c0.36 0 0.69-0.19 0.86-0.5S15.89 12.81 15.72 12.5zM9 12H7V10h2V12zM9 9H7V5h2V9z"></path></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z"></path></svg>
      </button>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/compat-7db58f8b7b91111107fac755dd8b178fe7db0f209ced51fc339c446ad3f8da2b.js"></script>
      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-a99faa9adb5b4c35c3eefd4255860c62ef4f2e3e1a41ee81bdb79c44bc778d0b.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-4b81b749fc206d713be4b1b572d9dd641826e5af81f13ec8a2b5f565eaa417c3.js"></script>
      
      
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner hidden">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M15.72 12.5l-6.85-11.98C8.69 0.21 8.36 0.02 8 0.02s-0.69 0.19-0.87 0.5l-6.85 11.98c-0.18 0.31-0.18 0.69 0 1C0.47 13.81 0.8 14 1.15 14h13.7c0.36 0 0.69-0.19 0.86-0.5S15.89 12.81 15.72 12.5zM9 12H7V10h2V12zM9 9H7V5h2V9z"></path></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z"></path></svg>
    </button>
  </div>
</div>

  </body>
</html>

